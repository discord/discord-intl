//! This module is autogenerated with `cargo run --bin gen-spec-tests`. The
//! source for this script lives at `examples/gen-spec-tests.rs`.

use test_case::test_case;

mod harness;
use harness::run_spec_test;

#[test_case("# foo\n## foo\n### foo\n#### foo\n##### foo\n###### foo", "<h1>foo</h1>\n<h2>foo</h2>\n<h3>foo</h3>\n<h4>foo</h4>\n<h5>foo</h5>\n<h6>foo</h6>"; "example_62")]
#[test_case("####### foo", "<p>####### foo</p>"; "example_63")]
#[test_case("#5 bolt\n\n#hashtag", "<p>#5 bolt</p>\n<p>#hashtag</p>"; "example_64")]
#[test_case("\\## foo", "<p>## foo</p>"; "example_65")]
#[test_case("# foo *bar* \\*baz\\*", "<h1>foo <em>bar</em> *baz*</h1>"; "example_66")]
#[test_case("#                  foo                     ", "<h1>foo</h1>"; "example_67")]
#[test_case(" ### foo\n  ## foo\n   # foo", "<h3>foo</h3>\n<h2>foo</h2>\n<h1>foo</h1>"; "example_68")]
#[test_case("    # foo", "<pre><code># foo\n</code></pre>"; "example_69")]
#[test_case("foo\n    # bar", "<p>foo\n# bar</p>"; "example_70")]
#[test_case("## foo ##\n  ###   bar    ###", "<h2>foo</h2>\n<h3>bar</h3>"; "example_71")]
#[test_case("# foo ##################################\n##### foo ##", "<h1>foo</h1>\n<h5>foo</h5>"; "example_72")]
#[test_case("### foo ###     ", "<h3>foo</h3>"; "example_73")]
#[test_case("### foo ### b", "<h3>foo ### b</h3>"; "example_74")]
#[test_case("# foo#", "<h1>foo#</h1>"; "example_75")]
#[test_case("### foo \\###\n## foo #\\##\n# foo \\#", "<h3>foo ###</h3>\n<h2>foo ###</h2>\n<h1>foo #</h1>"; "example_76")]
#[test_case("****\n## foo\n****", "<hr />\n<h2>foo</h2>\n<hr />"; "example_77")]
#[test_case("Foo bar\n# baz\nBar foo", "<p>Foo bar</p>\n<h1>baz</h1>\n<p>Bar foo</p>"; "example_78")]
#[test_case("## \n#\n### ###", "<h2></h2>\n<h1></h1>\n<h3></h3>"; "example_79")]
fn atx_headings(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("<http://foo.bar.baz>", "<p><a href=\"http://foo.bar.baz\">http://foo.bar.baz</a></p>"; "example_594")]
#[test_case("<https://foo.bar.baz/test?q=hello&id=22&boolean>", "<p><a href=\"https://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean\">https://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean</a></p>"; "example_595")]
#[test_case("<irc://foo.bar:2233/baz>", "<p><a href=\"irc://foo.bar:2233/baz\">irc://foo.bar:2233/baz</a></p>"; "example_596")]
#[test_case("<MAILTO:FOO@BAR.BAZ>", "<p><a href=\"MAILTO:FOO@BAR.BAZ\">MAILTO:FOO@BAR.BAZ</a></p>"; "example_597")]
// #[test_case("<a+b+c:d>", "<p><a href=\"a+b+c:d\">a+b+c:d</a></p>"; "example_598")]
#[test_case("<made-up-scheme://foo,bar>", "<p><a href=\"made-up-scheme://foo,bar\">made-up-scheme://foo,bar</a></p>"; "example_599")]
#[test_case("<https://../>", "<p><a href=\"https://../\">https://../</a></p>"; "example_600")]
#[test_case("<localhost:5001/foo>", "<p><a href=\"localhost:5001/foo\">localhost:5001/foo</a></p>"; "example_601")]
#[test_case("<https://foo.bar/baz bim>", "<p>&lt;https://foo.bar/baz bim&gt;</p>"; "example_602")]
#[test_case("<https://example.com/\\[\\>", "<p><a href=\"https://example.com/%5C%5B%5C\">https://example.com/\\[\\</a></p>"; "example_603")]
#[test_case("<foo@bar.example.com>", "<p><a href=\"mailto:foo@bar.example.com\">foo@bar.example.com</a></p>"; "example_604")]
#[test_case("<foo+special@Bar.baz-bar0.com>", "<p><a href=\"mailto:foo+special@Bar.baz-bar0.com\">foo+special@Bar.baz-bar0.com</a></p>"; "example_605")]
#[test_case("<foo\\+@bar.example.com>", "<p>&lt;foo+@bar.example.com&gt;</p>"; "example_606")]
#[test_case("<>", "<p>&lt;&gt;</p>"; "example_607")]
#[test_case("< https://foo.bar >", "<p>&lt; https://foo.bar &gt;</p>"; "example_608")]
#[test_case("<m:abc>", "<p>&lt;m:abc&gt;</p>"; "example_609")]
#[test_case("<foo.bar.baz>", "<p>&lt;foo.bar.baz&gt;</p>"; "example_610")]
#[test_case("https://example.com", "<p>https://example.com</p>"; "example_611")]
#[test_case("foo@bar.example.com", "<p>foo@bar.example.com</p>"; "example_612")]
fn autolinks(input: &str, output: &str) {
    run_spec_test(input, output);
}

// #[test_case("\\!\\\"\\#\\$\\%\\&\\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~", "<p>!&quot;#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</p>"; "example_12")]
#[test_case("\\\t\\A\\a\\ \\3\\\u{3c6}\\\u{ab}", "<p>\\\t\\A\\a\\ \\3\\\u{3c6}\\\u{ab}</p>"; "example_13")]
// #[test_case("\\*not emphasized*\n\\<br/> not a tag\n\\[not a link](/foo)\n\\`not code`\n1\\. not a list\n\\* not a list\n\\# not a heading\n\\[foo]: /url \"not a reference\"\n\\&ouml; not a character entity", "<p>*not emphasized*\n&lt;br/&gt; not a tag\n[not a link](/foo)\n`not code`\n1. not a list\n* not a list\n# not a heading\n[foo]: /url &quot;not a reference&quot;\n&amp;ouml; not a character entity</p>"; "example_14")]
#[test_case("\\\\*emphasis*", "<p>\\<em>emphasis</em></p>"; "example_15")]
#[test_case("foo\\\nbar", "<p>foo<br />\nbar</p>"; "example_16")]
#[test_case("`` \\[\\` ``", "<p><code>\\[\\`</code></p>"; "example_17")]
#[test_case("    \\[\\]", "<pre><code>\\[\\]\n</code></pre>"; "example_18")]
#[test_case("~~~\n\\[\\]\n~~~", "<pre><code>\\[\\]\n</code></pre>"; "example_19")]
// #[test_case("<https://example.com?find=\\*>", "<p><a href=\"https://example.com?find=%5C*\">https://example.com?find=\\*</a></p>"; "example_20")]
// #[test_case("<a href=\"/bar\\/)\">", "<a href=\"/bar\\/)\">"; "example_21")]
#[test_case("[foo](/bar\\* \"ti\\*tle\")", "<p><a href=\"/bar*\" title=\"ti*tle\">foo</a></p>"; "example_22")]
// #[test_case("[foo]\n\n[foo]: /bar\\* \"ti\\*tle\"", "<p><a href=\"/bar*\" title=\"ti*tle\">foo</a></p>"; "example_23")]
#[test_case("``` foo\\+bar\nfoo\n```", "<pre><code class=\"language-foo+bar\">foo\n</code></pre>"; "example_24")]
#[test_case("Appends ¯\\\\_(ツ)_/¯ to your message.", "<p>Appends ¯\\_(ツ)_/¯ to your message.</p>"; "shrug_command")]
#[test_case("Appends ¯\\\\\\_(ツ)_/¯ to your message.", "<p>Appends ¯\\_(ツ)_/¯ to your message.</p>"; "shrug_command_2")]
fn backslash_escapes(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("  \n\naaa\n  \n\n# aaa\n\n  ", "<p>aaa</p>\n<h1>aaa</h1>"; "example_227")]
fn blank_lines(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("> # Foo\n> bar\n> baz", "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>"; "example_228")]
// #[test_case("># Foo\n>bar\n> baz", "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>"; "example_229")]
// #[test_case("   > # Foo\n   > bar\n > baz", "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>"; "example_230")]
// #[test_case("    > # Foo\n    > bar\n    > baz", "<pre><code>&gt; # Foo\n&gt; bar\n&gt; baz\n</code></pre>"; "example_231")]
// #[test_case("> # Foo\n> bar\nbaz", "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>"; "example_232")]
// #[test_case("> bar\nbaz\n> foo", "<blockquote>\n<p>bar\nbaz\nfoo</p>\n</blockquote>"; "example_233")]
// #[test_case("> foo\n---", "<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />"; "example_234")]
// #[test_case("> - foo\n- bar", "<blockquote>\n<ul>\n<li>foo</li>\n</ul>\n</blockquote>\n<ul>\n<li>bar</li>\n</ul>"; "example_235")]
// #[test_case(">     foo\n    bar", "<blockquote>\n<pre><code>foo\n</code></pre>\n</blockquote>\n<pre><code>bar\n</code></pre>"; "example_236")]
// #[test_case("> ```\nfoo\n```", "<blockquote>\n<pre><code></code></pre>\n</blockquote>\n<p>foo</p>\n<pre><code></code></pre>"; "example_237")]
// #[test_case("> foo\n    - bar", "<blockquote>\n<p>foo\n- bar</p>\n</blockquote>"; "example_238")]
// #[test_case(">", "<blockquote>\n</blockquote>"; "example_239")]
// #[test_case(">\n>  \n> ", "<blockquote>\n</blockquote>"; "example_240")]
// #[test_case(">\n> foo\n>  ", "<blockquote>\n<p>foo</p>\n</blockquote>"; "example_241")]
// #[test_case("> foo\n\n> bar", "<blockquote>\n<p>foo</p>\n</blockquote>\n<blockquote>\n<p>bar</p>\n</blockquote>"; "example_242")]
// #[test_case("> foo\n> bar", "<blockquote>\n<p>foo\nbar</p>\n</blockquote>"; "example_243")]
// #[test_case("> foo\n>\n> bar", "<blockquote>\n<p>foo</p>\n<p>bar</p>\n</blockquote>"; "example_244")]
// #[test_case("foo\n> bar", "<p>foo</p>\n<blockquote>\n<p>bar</p>\n</blockquote>"; "example_245")]
// #[test_case("> aaa\n***\n> bbb", "<blockquote>\n<p>aaa</p>\n</blockquote>\n<hr />\n<blockquote>\n<p>bbb</p>\n</blockquote>"; "example_246")]
// #[test_case("> bar\nbaz", "<blockquote>\n<p>bar\nbaz</p>\n</blockquote>"; "example_247")]
// #[test_case("> bar\n\nbaz", "<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>"; "example_248")]
// #[test_case("> bar\n>\nbaz", "<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>"; "example_249")]
// #[test_case("> > > foo\nbar", "<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n</blockquote>\n</blockquote>"; "example_250")]
// #[test_case(">>> foo\n> bar\n>>baz", "<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar\nbaz</p>\n</blockquote>\n</blockquote>\n</blockquote>"; "example_251")]
// #[test_case(">     code\n\n>    not code", "<blockquote>\n<pre><code>code\n</code></pre>\n</blockquote>\n<blockquote>\n<p>not code</p>\n</blockquote>"; "example_252")]
fn block_quotes(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("`foo`", "<p><code>foo</code></p>"; "example_328")]
#[test_case("`` foo ` bar ``", "<p><code>foo ` bar</code></p>"; "example_329")]
#[test_case("` `` `", "<p><code>``</code></p>"; "example_330")]
#[test_case("`  ``  `", "<p><code> `` </code></p>"; "example_331")]
#[test_case("` a`", "<p><code> a</code></p>"; "example_332")]
#[test_case("`\u{a0}b\u{a0}`", "<p><code>\u{a0}b\u{a0}</code></p>"; "example_333")]
#[test_case("`\u{a0}`\n`  `", "<p><code>\u{a0}</code>\n<code>  </code></p>"; "example_334")]
#[test_case("``\nfoo\nbar  \nbaz\n``", "<p><code>foo bar   baz</code></p>"; "example_335")]
#[test_case("``\nfoo \n``", "<p><code>foo </code></p>"; "example_336")]
#[test_case("`foo   bar \nbaz`", "<p><code>foo   bar  baz</code></p>"; "example_337")]
#[test_case("`foo\\`bar`", "<p><code>foo\\</code>bar`</p>"; "example_338")]
#[test_case("``foo`bar``", "<p><code>foo`bar</code></p>"; "example_339")]
#[test_case("` foo `` bar `", "<p><code>foo `` bar</code></p>"; "example_340")]
#[test_case("*foo`*`", "<p>*foo<code>*</code></p>"; "example_341")]
#[test_case("[not a `link](/foo`)", "<p>[not a <code>link](/foo</code>)</p>"; "example_342")]
// #[test_case("`<a href=\"`\">`", "<p><code>&lt;a href=&quot;</code>&quot;&gt;`</p>"; "example_343")]
// #[test_case("<a href=\"`\">`", "<p><a href=\"`\">`</p>"; "example_344")]
#[test_case("`<https://foo.bar.`baz>`", "<p><code>&lt;https://foo.bar.</code>baz&gt;`</p>"; "example_345")]
#[test_case("<https://foo.bar.`baz>`", "<p><a href=\"https://foo.bar.%60baz\">https://foo.bar.`baz</a>`</p>"; "example_346")]
#[test_case("```foo``", "<p>```foo``</p>"; "example_347")]
#[test_case("`foo", "<p>`foo</p>"; "example_348")]
#[test_case("`foo``bar``", "<p>`foo<code>bar</code></p>"; "example_349")]
fn code_spans(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("*foo bar*", "<p><em>foo bar</em></p>"; "example_350")]
#[test_case("a * foo bar*", "<p>a * foo bar*</p>"; "example_351")]
#[test_case("a*\"foo\"*", "<p>a*&quot;foo&quot;*</p>"; "example_352")]
#[test_case("*\u{a0}a\u{a0}*", "<p>*\u{a0}a\u{a0}*</p>"; "example_353")]
#[test_case("*$*alpha.\n\n*\u{a3}*bravo.\n\n*\u{20ac}*charlie.", "<p>*$*alpha.</p>\n<p>*\u{a3}*bravo.</p>\n<p>*\u{20ac}*charlie.</p>"; "example_354")]
#[test_case("foo*bar*", "<p>foo<em>bar</em></p>"; "example_355")]
#[test_case("5*6*78", "<p>5<em>6</em>78</p>"; "example_356")]
#[test_case("_foo bar_", "<p><em>foo bar</em></p>"; "example_357")]
#[test_case("_ foo bar_", "<p>_ foo bar_</p>"; "example_358")]
#[test_case("a_\"foo\"_", "<p>a_&quot;foo&quot;_</p>"; "example_359")]
#[test_case("foo_bar_", "<p>foo_bar_</p>"; "example_360")]
#[test_case("5_6_78", "<p>5_6_78</p>"; "example_361")]
#[test_case("\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}_\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}_", "<p>\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}_\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}_</p>"; "example_362")]
#[test_case("aa_\"bb\"_cc", "<p>aa_&quot;bb&quot;_cc</p>"; "example_363")]
#[test_case("foo-_(bar)_", "<p>foo-<em>(bar)</em></p>"; "example_364")]
#[test_case("_foo*", "<p>_foo*</p>"; "example_365")]
#[test_case("*foo bar *", "<p>*foo bar *</p>"; "example_366")]
#[test_case("*foo bar\n*", "<p>*foo bar\n*</p>"; "example_367")]
#[test_case("*(*foo)", "<p>*(*foo)</p>"; "example_368")]
#[test_case("*(*foo*)*", "<p><em>(<em>foo</em>)</em></p>"; "example_369")]
#[test_case("*foo*bar", "<p><em>foo</em>bar</p>"; "example_370")]
#[test_case("_foo bar _", "<p>_foo bar _</p>"; "example_371")]
#[test_case("_(_foo)", "<p>_(_foo)</p>"; "example_372")]
#[test_case("_(_foo_)_", "<p><em>(<em>foo</em>)</em></p>"; "example_373")]
#[test_case("_foo_bar", "<p>_foo_bar</p>"; "example_374")]
#[test_case("_\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}_\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}", "<p>_\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}_\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}</p>"; "example_375")]
#[test_case("_foo_bar_baz_", "<p><em>foo_bar_baz</em></p>"; "example_376")]
#[test_case("_(bar)_.", "<p><em>(bar)</em>.</p>"; "example_377")]
#[test_case("**foo bar**", "<p><strong>foo bar</strong></p>"; "example_378")]
#[test_case("** foo bar**", "<p>** foo bar**</p>"; "example_379")]
#[test_case("a**\"foo\"**", "<p>a**&quot;foo&quot;**</p>"; "example_380")]
#[test_case("foo**bar**", "<p>foo<strong>bar</strong></p>"; "example_381")]
#[test_case("__foo bar__", "<p><strong>foo bar</strong></p>"; "example_382")]
#[test_case("__ foo bar__", "<p>__ foo bar__</p>"; "example_383")]
#[test_case("__\nfoo bar__", "<p>__\nfoo bar__</p>"; "example_384")]
#[test_case("a__\"foo\"__", "<p>a__&quot;foo&quot;__</p>"; "example_385")]
#[test_case("foo__bar__", "<p>foo__bar__</p>"; "example_386")]
#[test_case("5__6__78", "<p>5__6__78</p>"; "example_387")]
#[test_case("\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}__\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}__", "<p>\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}__\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}__</p>"; "example_388")]
#[test_case("__foo, __bar__, baz__", "<p><strong>foo, <strong>bar</strong>, baz</strong></p>"; "example_389")]
#[test_case("foo-__(bar)__", "<p>foo-<strong>(bar)</strong></p>"; "example_390")]
#[test_case("**foo bar **", "<p>**foo bar **</p>"; "example_391")]
#[test_case("**(**foo)", "<p>**(**foo)</p>"; "example_392")]
#[test_case("*(**foo**)*", "<p><em>(<strong>foo</strong>)</em></p>"; "example_393")]
#[test_case("**Gomphocarpus (*Gomphocarpus physocarpus*, syn.\n*Asclepias physocarpa*)**", "<p><strong>Gomphocarpus (<em>Gomphocarpus physocarpus</em>, syn.\n<em>Asclepias physocarpa</em>)</strong></p>"; "example_394")]
#[test_case("**foo \"*bar*\" foo**", "<p><strong>foo &quot;<em>bar</em>&quot; foo</strong></p>"; "example_395")]
#[test_case("**foo**bar", "<p><strong>foo</strong>bar</p>"; "example_396")]
#[test_case("__foo bar __", "<p>__foo bar __</p>"; "example_397")]
#[test_case("__(__foo)", "<p>__(__foo)</p>"; "example_398")]
#[test_case("_(__foo__)_", "<p><em>(<strong>foo</strong>)</em></p>"; "example_399")]
#[test_case("__foo__bar", "<p>__foo__bar</p>"; "example_400")]
#[test_case("__\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}__\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}", "<p>__\u{43f}\u{440}\u{438}\u{441}\u{442}\u{430}\u{43d}\u{44f}\u{43c}__\u{441}\u{442}\u{440}\u{435}\u{43c}\u{44f}\u{442}\u{441}\u{44f}</p>"; "example_401")]
#[test_case("__foo__bar__baz__", "<p><strong>foo__bar__baz</strong></p>"; "example_402")]
#[test_case("__(bar)__.", "<p><strong>(bar)</strong>.</p>"; "example_403")]
#[test_case("*foo [bar](/url)*", "<p><em>foo <a href=\"/url\">bar</a></em></p>"; "example_404")]
#[test_case("*foo\nbar*", "<p><em>foo\nbar</em></p>"; "example_405")]
#[test_case("_foo __bar__ baz_", "<p><em>foo <strong>bar</strong> baz</em></p>"; "example_406")]
#[test_case("_foo _bar_ baz_", "<p><em>foo <em>bar</em> baz</em></p>"; "example_407")]
#[test_case("__foo_ bar_", "<p><em><em>foo</em> bar</em></p>"; "example_408")]
#[test_case("*foo *bar**", "<p><em>foo <em>bar</em></em></p>"; "example_409")]
#[test_case("*foo **bar** baz*", "<p><em>foo <strong>bar</strong> baz</em></p>"; "example_410")]
#[test_case("*foo**bar**baz*", "<p><em>foo<strong>bar</strong>baz</em></p>"; "example_411")]
#[test_case("*foo**bar*", "<p><em>foo**bar</em></p>"; "example_412")]
#[test_case("***foo** bar*", "<p><em><strong>foo</strong> bar</em></p>"; "example_413")]
#[test_case("*foo **bar***", "<p><em>foo <strong>bar</strong></em></p>"; "example_414")]
#[test_case("*foo**bar***", "<p><em>foo<strong>bar</strong></em></p>"; "example_415")]
#[test_case("foo***bar***baz", "<p>foo<em><strong>bar</strong></em>baz</p>"; "example_416")]
#[test_case("foo******bar*********baz", "<p>foo<strong><strong><strong>bar</strong></strong></strong>***baz</p>"; "example_417")]
#[test_case("*foo **bar *baz* bim** bop*", "<p><em>foo <strong>bar <em>baz</em> bim</strong> bop</em></p>"; "example_418")]
#[test_case("*foo [*bar*](/url)*", "<p><em>foo <a href=\"/url\"><em>bar</em></a></em></p>"; "example_419")]
#[test_case("** is not an empty emphasis", "<p>** is not an empty emphasis</p>"; "example_420")]
#[test_case("**** is not an empty strong emphasis", "<p>**** is not an empty strong emphasis</p>"; "example_421")]
#[test_case("**foo [bar](/url)**", "<p><strong>foo <a href=\"/url\">bar</a></strong></p>"; "example_422")]
#[test_case("**foo\nbar**", "<p><strong>foo\nbar</strong></p>"; "example_423")]
#[test_case("__foo _bar_ baz__", "<p><strong>foo <em>bar</em> baz</strong></p>"; "example_424")]
#[test_case("__foo __bar__ baz__", "<p><strong>foo <strong>bar</strong> baz</strong></p>"; "example_425")]
#[test_case("____foo__ bar__", "<p><strong><strong>foo</strong> bar</strong></p>"; "example_426")]
#[test_case("**foo **bar****", "<p><strong>foo <strong>bar</strong></strong></p>"; "example_427")]
#[test_case("**foo *bar* baz**", "<p><strong>foo <em>bar</em> baz</strong></p>"; "example_428")]
#[test_case("**foo*bar*baz**", "<p><strong>foo<em>bar</em>baz</strong></p>"; "example_429")]
#[test_case("***foo* bar**", "<p><strong><em>foo</em> bar</strong></p>"; "example_430")]
#[test_case("**foo *bar***", "<p><strong>foo <em>bar</em></strong></p>"; "example_431")]
#[test_case("**foo *bar **baz**\nbim* bop**", "<p><strong>foo <em>bar <strong>baz</strong>\nbim</em> bop</strong></p>"; "example_432")]
#[test_case("**foo [*bar*](/url)**", "<p><strong>foo <a href=\"/url\"><em>bar</em></a></strong></p>"; "example_433")]
#[test_case("__ is not an empty emphasis", "<p>__ is not an empty emphasis</p>"; "example_434")]
#[test_case("____ is not an empty strong emphasis", "<p>____ is not an empty strong emphasis</p>"; "example_435")]
#[test_case("foo ***", "<p>foo ***</p>"; "example_436")]
#[test_case("foo *\\**", "<p>foo <em>*</em></p>"; "example_437")]
#[test_case("foo *_*", "<p>foo <em>_</em></p>"; "example_438")]
#[test_case("foo *****", "<p>foo *****</p>"; "example_439")]
#[test_case("foo **\\***", "<p>foo <strong>*</strong></p>"; "example_440")]
#[test_case("foo **_**", "<p>foo <strong>_</strong></p>"; "example_441")]
#[test_case("**foo*", "<p>*<em>foo</em></p>"; "example_442")]
#[test_case("*foo**", "<p><em>foo</em>*</p>"; "example_443")]
#[test_case("***foo**", "<p>*<strong>foo</strong></p>"; "example_444")]
#[test_case("****foo*", "<p>***<em>foo</em></p>"; "example_445")]
#[test_case("**foo***", "<p><strong>foo</strong>*</p>"; "example_446")]
#[test_case("*foo****", "<p><em>foo</em>***</p>"; "example_447")]
#[test_case("foo ___", "<p>foo ___</p>"; "example_448")]
#[test_case("foo _\\__", "<p>foo <em>_</em></p>"; "example_449")]
#[test_case("foo _*_", "<p>foo <em>*</em></p>"; "example_450")]
#[test_case("foo _____", "<p>foo _____</p>"; "example_451")]
#[test_case("foo __\\___", "<p>foo <strong>_</strong></p>"; "example_452")]
#[test_case("foo __*__", "<p>foo <strong>*</strong></p>"; "example_453")]
#[test_case("__foo_", "<p>_<em>foo</em></p>"; "example_454")]
#[test_case("_foo__", "<p><em>foo</em>_</p>"; "example_455")]
#[test_case("___foo__", "<p>_<strong>foo</strong></p>"; "example_456")]
#[test_case("____foo_", "<p>___<em>foo</em></p>"; "example_457")]
#[test_case("__foo___", "<p><strong>foo</strong>_</p>"; "example_458")]
#[test_case("_foo____", "<p><em>foo</em>___</p>"; "example_459")]
#[test_case("**foo**", "<p><strong>foo</strong></p>"; "example_460")]
#[test_case("*_foo_*", "<p><em><em>foo</em></em></p>"; "example_461")]
#[test_case("__foo__", "<p><strong>foo</strong></p>"; "example_462")]
#[test_case("_*foo*_", "<p><em><em>foo</em></em></p>"; "example_463")]
#[test_case("****foo****", "<p><strong><strong>foo</strong></strong></p>"; "example_464")]
#[test_case("____foo____", "<p><strong><strong>foo</strong></strong></p>"; "example_465")]
#[test_case("******foo******", "<p><strong><strong><strong>foo</strong></strong></strong></p>"; "example_466")]
#[test_case("***foo***", "<p><em><strong>foo</strong></em></p>"; "example_467")]
#[test_case("_____foo_____", "<p><em><strong><strong>foo</strong></strong></em></p>"; "example_468")]
#[test_case("*foo _bar* baz_", "<p><em>foo _bar</em> baz_</p>"; "example_469")]
#[test_case("*foo __bar *baz bim__ bam*", "<p><em>foo <strong>bar *baz bim</strong> bam</em></p>"; "example_470")]
#[test_case("**foo **bar baz**", "<p>**foo <strong>bar baz</strong></p>"; "example_471")]
#[test_case("*foo *bar baz*", "<p>*foo <em>bar baz</em></p>"; "example_472")]
#[test_case("*[bar*](/url)", "<p>*<a href=\"/url\">bar*</a></p>"; "example_473")]
#[test_case("_foo [bar_](/url)", "<p>_foo <a href=\"/url\">bar_</a></p>"; "example_474")]
// #[test_case("*<img src=\"foo\" title=\"*\"/>", "<p>*<img src=\"foo\" title=\"*\"/></p>"; "example_475")]
// #[test_case("**<a href=\"**\">", "<p>**<a href=\"**\"></p>"; "example_476")]
// #[test_case("__<a href=\"__\">", "<p>__<a href=\"__\"></p>"; "example_477")]
#[test_case("*a `*`*", "<p><em>a <code>*</code></em></p>"; "example_478")]
#[test_case("_a `_`_", "<p><em>a <code>_</code></em></p>"; "example_479")]
#[test_case("**a<https://foo.bar/?q=**>", "<p>**a<a href=\"https://foo.bar/?q=**\">https://foo.bar/?q=**</a></p>"; "example_480")]
#[test_case("__a<https://foo.bar/?q=__>", "<p>__a<a href=\"https://foo.bar/?q=__\">https://foo.bar/?q=__</a></p>"; "example_481")]
fn emphasis_and_strong_emphasis(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("&nbsp; &amp; &copy; &AElig; &Dcaron;\n&frac34; &HilbertSpace; &DifferentialD;\n&ClockwiseContourIntegral; &ngE;", "<p>\u{a0} &amp; \u{a9} \u{c6} \u{10e}\n\u{be} \u{210b} \u{2146}\n\u{2232} \u{2267}\u{338}</p>"; "example_25")]
#[test_case("&#35; &#1234; &#992; &#0;", "<p># \u{4d2} \u{3e0} \u{fffd}</p>"; "example_26")]
#[test_case("&#X22; &#XD06; &#xcab;", "<p>&quot; \u{d06} \u{cab}</p>"; "example_27")]
#[test_case("&nbsp &x; &#; &#x;\n&#87654321;\n&#abcdef0;\n&ThisIsNotDefined; &hi?;", "<p>&amp;nbsp &amp;x; &amp;#; &amp;#x;\n&amp;#87654321;\n&amp;#abcdef0;\n&amp;ThisIsNotDefined; &amp;hi?;</p>"; "example_28")]
#[test_case("&copy", "<p>&amp;copy</p>"; "example_29")]
#[test_case("&MadeUpEntity;", "<p>&amp;MadeUpEntity;</p>"; "example_30")]
// #[test_case("<a href=\"&ouml;&ouml;.html\">", "<a href=\"&ouml;&ouml;.html\">"; "example_31")]
#[test_case("[foo](/f&ouml;&ouml; \"f&ouml;&ouml;\")", "<p><a href=\"/f%C3%B6%C3%B6\" title=\"f\u{f6}\u{f6}\">foo</a></p>"; "example_32")]
// #[test_case("[foo]\n\n[foo]: /f&ouml;&ouml; \"f&ouml;&ouml;\"", "<p><a href=\"/f%C3%B6%C3%B6\" title=\"f\u{f6}\u{f6}\">foo</a></p>"; "example_33")]
#[test_case("``` f&ouml;&ouml;\nfoo\n```", "<pre><code class=\"language-f\u{f6}\u{f6}\">foo\n</code></pre>"; "example_34")]
#[test_case("`f&ouml;&ouml;`", "<p><code>f&amp;ouml;&amp;ouml;</code></p>"; "example_35")]
#[test_case("    f&ouml;f&ouml;", "<pre><code>f&amp;ouml;f&amp;ouml;\n</code></pre>"; "example_36")]
#[test_case("&#42;foo&#42;\n*foo*", "<p>*foo*\n<em>foo</em></p>"; "example_37")]
// #[test_case("&#42; foo\n\n* foo", "<p>* foo</p>\n<ul>\n<li>foo</li>\n</ul>"; "example_38")]
#[test_case("foo&#10;&#10;bar", "<p>foo\n\nbar</p>"; "example_39")]
#[test_case("&#9;foo", "<p>\tfoo</p>"; "example_40")]
#[test_case("[a](url &quot;tit&quot;)", "<p>[a](url &quot;tit&quot;)</p>"; "example_41")]
fn entity_and_numeric_character_references(input: &str, output: &str) {
    run_spec_test(input, output);
}

// #[test_case("```\n<\n >\n```", "<pre><code>&lt;\n &gt;\n</code></pre>"; "example_119")]
// #[test_case("~~~\n<\n >\n~~~", "<pre><code>&lt;\n &gt;\n</code></pre>"; "example_120")]
#[test_case("``\nfoo\n``", "<p><code>foo</code></p>"; "example_121")]
#[test_case("```\naaa\n~~~\n```", "<pre><code>aaa\n~~~\n</code></pre>"; "example_122")]
#[test_case("~~~\naaa\n```\n~~~", "<pre><code>aaa\n```\n</code></pre>"; "example_123")]
#[test_case("````\naaa\n```\n``````", "<pre><code>aaa\n```\n</code></pre>"; "example_124")]
#[test_case("~~~~\naaa\n~~~\n~~~~", "<pre><code>aaa\n~~~\n</code></pre>"; "example_125")]
#[test_case("```", "<pre><code></code></pre>"; "example_126")]
#[test_case("`````\n\n```\naaa", "<pre><code>\n```\naaa\n</code></pre>"; "example_127")]
// #[test_case("> ```\n> aaa\n\nbbb", "<blockquote>\n<pre><code>aaa\n</code></pre>\n</blockquote>\n<p>bbb</p>"; "example_128")]
#[test_case("```\n\n  \n```", "<pre><code>\n  \n</code></pre>"; "example_129")]
#[test_case("```\n```", "<pre><code></code></pre>"; "example_130")]
#[test_case(" ```\n aaa\naaa\n```", "<pre><code>aaa\naaa\n</code></pre>"; "example_131")]
#[test_case("  ```\naaa\n  aaa\naaa\n  ```", "<pre><code>aaa\naaa\naaa\n</code></pre>"; "example_132")]
#[test_case("   ```\n   aaa\n    aaa\n  aaa\n   ```", "<pre><code>aaa\n aaa\naaa\n</code></pre>"; "example_133")]
#[test_case("    ```\n    aaa\n    ```", "<pre><code>```\naaa\n```\n</code></pre>"; "example_134")]
#[test_case("```\naaa\n  ```", "<pre><code>aaa\n</code></pre>"; "example_135")]
#[test_case("   ```\naaa\n  ```", "<pre><code>aaa\n</code></pre>"; "example_136")]
#[test_case("```\naaa\n    ```", "<pre><code>aaa\n    ```\n</code></pre>"; "example_137")]
#[test_case("``` ```\naaa", "<p><code> </code>\naaa</p>"; "example_138")]
#[test_case("~~~~~~\naaa\n~~~ ~~", "<pre><code>aaa\n~~~ ~~\n</code></pre>"; "example_139")]
#[test_case("foo\n```\nbar\n```\nbaz", "<p>foo</p>\n<pre><code>bar\n</code></pre>\n<p>baz</p>"; "example_140")]
#[test_case("foo\n---\n~~~\nbar\n~~~\n# baz", "<h2>foo</h2>\n<pre><code>bar\n</code></pre>\n<h1>baz</h1>"; "example_141")]
#[test_case("```ruby\ndef foo(x)\n  return 3\nend\n```", "<pre><code class=\"language-ruby\">def foo(x)\n  return 3\nend\n</code></pre>"; "example_142")]
#[test_case("~~~~    ruby startline=3 $%@#$\ndef foo(x)\n  return 3\nend\n~~~~~~~", "<pre><code class=\"language-ruby\">def foo(x)\n  return 3\nend\n</code></pre>"; "example_143")]
#[test_case("````;\n````", "<pre><code class=\"language-;\"></code></pre>"; "example_144")]
#[test_case("``` aa ```\nfoo", "<p><code>aa</code>\nfoo</p>"; "example_145")]
#[test_case("~~~ aa ``` ~~~\nfoo\n~~~", "<pre><code class=\"language-aa\">foo\n</code></pre>"; "example_146")]
#[test_case("```\n``` aaa\n```", "<pre><code>``` aaa\n</code></pre>"; "example_147")]
fn fenced_code_blocks(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("foo  \nbaz", "<p>foo<br />\nbaz</p>"; "example_633")]
#[test_case("foo\\\nbaz", "<p>foo<br />\nbaz</p>"; "example_634")]
#[test_case("foo       \nbaz", "<p>foo<br />\nbaz</p>"; "example_635")]
#[test_case("foo  \n     bar", "<p>foo<br />\nbar</p>"; "example_636")]
#[test_case("foo\\\n     bar", "<p>foo<br />\nbar</p>"; "example_637")]
#[test_case("*foo  \nbar*", "<p><em>foo<br />\nbar</em></p>"; "example_638")]
#[test_case("*foo\\\nbar*", "<p><em>foo<br />\nbar</em></p>"; "example_639")]
#[test_case("`code  \nspan`", "<p><code>code   span</code></p>"; "example_640")]
#[test_case("`code\\\nspan`", "<p><code>code\\ span</code></p>"; "example_641")]
// #[test_case("<a href=\"foo  \nbar\">", "<p><a href=\"foo  \nbar\"></p>"; "example_642")]
// #[test_case("<a href=\"foo\\\nbar\">", "<p><a href=\"foo\\\nbar\"></p>"; "example_643")]
#[test_case("foo\\", "<p>foo\\</p>"; "example_644")]
#[test_case("foo  ", "<p>foo</p>"; "example_645")]
#[test_case("### foo\\", "<h3>foo\\</h3>"; "example_646")]
#[test_case("### foo  ", "<h3>foo</h3>"; "example_647")]
fn hard_line_breaks(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("<table><tr><td>\n<pre>\n**Hello**,\n\n_world_.\n</pre>\n</td></tr></table>", "<table><tr><td>\n<pre>\n**Hello**,\n<p><em>world</em>.\n</pre></p>\n</td></tr></table>"; "example_148")]
// #[test_case("<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n\nokay.", "<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n<p>okay.</p>"; "example_149")]
// #[test_case(" <div>\n  *hello*\n         <foo><a>", " <div>\n  *hello*\n         <foo><a>"; "example_150")]
// #[test_case("</div>\n*foo*", "</div>\n*foo*"; "example_151")]
// #[test_case("<DIV CLASS=\"foo\">\n\n*Markdown*\n\n</DIV>", "<DIV CLASS=\"foo\">\n<p><em>Markdown</em></p>\n</DIV>"; "example_152")]
// #[test_case("<div id=\"foo\"\n  class=\"bar\">\n</div>", "<div id=\"foo\"\n  class=\"bar\">\n</div>"; "example_153")]
// #[test_case("<div id=\"foo\" class=\"bar\n  baz\">\n</div>", "<div id=\"foo\" class=\"bar\n  baz\">\n</div>"; "example_154")]
// #[test_case("<div>\n*foo*\n\n*bar*", "<div>\n*foo*\n<p><em>bar</em></p>"; "example_155")]
// #[test_case("<div id=\"foo\"\n*hi*", "<div id=\"foo\"\n*hi*"; "example_156")]
// #[test_case("<div class\nfoo", "<div class\nfoo"; "example_157")]
// #[test_case("<div *???-&&&-<---\n*foo*", "<div *???-&&&-<---\n*foo*"; "example_158")]
// #[test_case("<div><a href=\"bar\">*foo*</a></div>", "<div><a href=\"bar\">*foo*</a></div>"; "example_159")]
// #[test_case("<table><tr><td>\nfoo\n</td></tr></table>", "<table><tr><td>\nfoo\n</td></tr></table>"; "example_160")]
// #[test_case("<div></div>\n``` c\nint x = 33;\n```", "<div></div>\n``` c\nint x = 33;\n```"; "example_161")]
// #[test_case("<a href=\"foo\">\n*bar*\n</a>", "<a href=\"foo\">\n*bar*\n</a>"; "example_162")]
// #[test_case("<Warning>\n*bar*\n</Warning>", "<Warning>\n*bar*\n</Warning>"; "example_163")]
// #[test_case("<i class=\"foo\">\n*bar*\n</i>", "<i class=\"foo\">\n*bar*\n</i>"; "example_164")]
// #[test_case("</ins>\n*bar*", "</ins>\n*bar*"; "example_165")]
// #[test_case("<del>\n*foo*\n</del>", "<del>\n*foo*\n</del>"; "example_166")]
// #[test_case("<del>\n\n*foo*\n\n</del>", "<del>\n<p><em>foo</em></p>\n</del>"; "example_167")]
// #[test_case("<del>*foo*</del>", "<p><del><em>foo</em></del></p>"; "example_168")]
// #[test_case("<pre language=\"haskell\"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\nokay", "<pre language=\"haskell\"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\n<p>okay</p>"; "example_169")]
// #[test_case("<script type=\"text/javascript\">\n// JavaScript example\n\ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaScript!\";\n</script>\nokay", "<script type=\"text/javascript\">\n// JavaScript example\n\ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaScript!\";\n</script>\n<p>okay</p>"; "example_170")]
// #[test_case("<textarea>\n\n*foo*\n\n_bar_\n\n</textarea>", "<textarea>\n\n*foo*\n\n_bar_\n\n</textarea>"; "example_171")]
// #[test_case("<style\n  type=\"text/css\">\nh1 {color:red;}\n\np {color:blue;}\n</style>\nokay", "<style\n  type=\"text/css\">\nh1 {color:red;}\n\np {color:blue;}\n</style>\n<p>okay</p>"; "example_172")]
// #[test_case("<style\n  type=\"text/css\">\n\nfoo", "<style\n  type=\"text/css\">\n\nfoo"; "example_173")]
// #[test_case("> <div>\n> foo\n\nbar", "<blockquote>\n<div>\nfoo\n</blockquote>\n<p>bar</p>"; "example_174")]
// #[test_case("- <div>\n- foo", "<ul>\n<li>\n<div>\n</li>\n<li>foo</li>\n</ul>"; "example_175")]
// #[test_case("<style>p{color:red;}</style>\n*foo*", "<style>p{color:red;}</style>\n<p><em>foo</em></p>"; "example_176")]
// #[test_case("<!-- foo -->*bar*\n*baz*", "<!-- foo -->*bar*\n<p><em>baz</em></p>"; "example_177")]
// #[test_case("<script>\nfoo\n</script>1. *bar*", "<script>\nfoo\n</script>1. *bar*"; "example_178")]
// #[test_case("<!-- Foo\n\nbar\n   baz -->\nokay", "<!-- Foo\n\nbar\n   baz -->\n<p>okay</p>"; "example_179")]
// #[test_case("<?php\n\n  echo \'>\';\n\n?>\nokay", "<?php\n\n  echo \'>\';\n\n?>\n<p>okay</p>"; "example_180")]
// #[test_case("<!DOCTYPE html>", "<!DOCTYPE html>"; "example_181")]
// #[test_case("<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\nokay", "<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\n<p>okay</p>"; "example_182")]
// #[test_case("  <!-- foo -->\n\n    <!-- foo -->", "  <!-- foo -->\n<pre><code>&lt;!-- foo --&gt;\n</code></pre>"; "example_183")]
// #[test_case("  <div>\n\n    <div>", "  <div>\n<pre><code>&lt;div&gt;\n</code></pre>"; "example_184")]
// #[test_case("Foo\n<div>\nbar\n</div>", "<p>Foo</p>\n<div>\nbar\n</div>"; "example_185")]
// #[test_case("<div>\nbar\n</div>\n*foo*", "<div>\nbar\n</div>\n*foo*"; "example_186")]
// #[test_case("Foo\n<a href=\"bar\">\nbaz", "<p>Foo\n<a href=\"bar\">\nbaz</p>"; "example_187")]
// #[test_case("<div>\n\n*Emphasized* text.\n\n</div>", "<div>\n<p><em>Emphasized</em> text.</p>\n</div>"; "example_188")]
// #[test_case("<div>\n*Emphasized* text.\n</div>", "<div>\n*Emphasized* text.\n</div>"; "example_189")]
// #[test_case("<table>\n\n<tr>\n\n<td>\nHi\n</td>\n\n</tr>\n\n</table>", "<table>\n<tr>\n<td>\nHi\n</td>\n</tr>\n</table>"; "example_190")]
// #[test_case("<table>\n\n  <tr>\n\n    <td>\n      Hi\n    </td>\n\n  </tr>\n\n</table>", "<table>\n  <tr>\n<pre><code>&lt;td&gt;\n  Hi\n&lt;/td&gt;\n</code></pre>\n  </tr>\n</table>"; "example_191")]
fn html_blocks(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("![foo](/url \"title\")", "<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>"; "example_572")]
// #[test_case("![foo *bar*]\n\n[foo *bar*]: train.jpg \"train & tracks\"", "<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>"; "example_573")]
#[test_case("![foo ![bar](/url)](/url2)", "<p><img src=\"/url2\" alt=\"foo bar\" /></p>"; "example_574")]
#[test_case("![foo [bar](/url)](/url2)", "<p><img src=\"/url2\" alt=\"foo bar\" /></p>"; "example_575")]
// #[test_case("![foo *bar*][]\n\n[foo *bar*]: train.jpg \"train & tracks\"", "<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>"; "example_576")]
// #[test_case("![foo *bar*][foobar]\n\n[FOOBAR]: train.jpg \"train & tracks\"", "<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>"; "example_577")]
#[test_case("![foo](train.jpg)", "<p><img src=\"train.jpg\" alt=\"foo\" /></p>"; "example_578")]
#[test_case("My ![foo bar](/path/to/train.jpg  \"title\"   )", "<p>My <img src=\"/path/to/train.jpg\" alt=\"foo bar\" title=\"title\" /></p>"; "example_579")]
// #[test_case("![foo](<url>)", "<p><img src=\"url\" alt=\"foo\" /></p>"; "example_580")]
#[test_case("![](/url)", "<p><img src=\"/url\" alt=\"\" /></p>"; "example_581")]
// #[test_case("![foo][bar]\n\n[bar]: /url", "<p><img src=\"/url\" alt=\"foo\" /></p>"; "example_582")]
// #[test_case("![foo][bar]\n\n[BAR]: /url", "<p><img src=\"/url\" alt=\"foo\" /></p>"; "example_583")]
// #[test_case("![foo][]\n\n[foo]: /url \"title\"", "<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>"; "example_584")]
// #[test_case("![*foo* bar][]\n\n[*foo* bar]: /url \"title\"", "<p><img src=\"/url\" alt=\"foo bar\" title=\"title\" /></p>"; "example_585")]
// #[test_case("![Foo][]\n\n[foo]: /url \"title\"", "<p><img src=\"/url\" alt=\"Foo\" title=\"title\" /></p>"; "example_586")]
// #[test_case("![foo] \n[]\n\n[foo]: /url \"title\"", "<p><img src=\"/url\" alt=\"foo\" title=\"title\" />\n[]</p>"; "example_587")]
// #[test_case("![foo]\n\n[foo]: /url \"title\"", "<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>"; "example_588")]
// #[test_case("![*foo* bar]\n\n[*foo* bar]: /url \"title\"", "<p><img src=\"/url\" alt=\"foo bar\" title=\"title\" /></p>"; "example_589")]
// #[test_case("![[foo]]\n\n[[foo]]: /url \"title\"", "<p>![[foo]]</p>\n<p>[[foo]]: /url &quot;title&quot;</p>"; "example_590")]
// #[test_case("![Foo]\n\n[foo]: /url \"title\"", "<p><img src=\"/url\" alt=\"Foo\" title=\"title\" /></p>"; "example_591")]
// #[test_case("!\\[foo]\n\n[foo]: /url \"title\"", "<p>![foo]</p>"; "example_592")]
// #[test_case("\\![foo]\n\n[foo]: /url \"title\"", "<p>!<a href=\"/url\" title=\"title\">foo</a></p>"; "example_593")]
fn images(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("    a simple\n      indented code block", "<pre><code>a simple\n  indented code block\n</code></pre>"; "example_107")]
// #[test_case("  - foo\n\n    bar", "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>"; "example_108")]
// #[test_case("1.  foo\n\n    - bar", "<ol>\n<li>\n<p>foo</p>\n<ul>\n<li>bar</li>\n</ul>\n</li>\n</ol>"; "example_109")]
// #[test_case("    <a/>\n    *hi*\n\n    - one", "<pre><code>&lt;a/&gt;\n*hi*\n\n- one\n</code></pre>"; "example_110")]
#[test_case("    chunk1\n\n    chunk2\n  \n \n \n    chunk3", "<pre><code>chunk1\n\nchunk2\n\n\n\nchunk3\n</code></pre>"; "example_111")]
#[test_case("    chunk1\n      \n      chunk2", "<pre><code>chunk1\n  \n  chunk2\n</code></pre>"; "example_112")]
#[test_case("Foo\n    bar", "<p>Foo\nbar</p>"; "example_113")]
#[test_case("    foo\nbar", "<pre><code>foo\n</code></pre>\n<p>bar</p>"; "example_114")]
#[test_case("# Heading\n    foo\nHeading\n------\n    foo\n----", "<h1>Heading</h1>\n<pre><code>foo\n</code></pre>\n<h2>Heading</h2>\n<pre><code>foo\n</code></pre>\n<hr />"; "example_115")]
#[test_case("        foo\n    bar", "<pre><code>    foo\nbar\n</code></pre>"; "example_116")]
#[test_case("\n    \n    foo\n    ", "<pre><code>foo\n</code></pre>"; "example_117")]
#[test_case("    foo  ", "<pre><code>foo  \n</code></pre>"; "example_118")]
fn indented_code_blocks(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("`hi`lo`", "<p><code>hi</code>lo`</p>"; "example_327")]
fn inlines(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("[foo]: /url \"title\"\n\n[foo]", "<p><a href=\"/url\" title=\"title\">foo</a></p>"; "example_192")]
// #[test_case("   [foo]: \n      /url  \n           \'the title\'  \n\n[foo]", "<p><a href=\"/url\" title=\"the title\">foo</a></p>"; "example_193")]
// #[test_case("[Foo*bar\\]]:my_(url) \'title (with parens)\'\n\n[Foo*bar\\]]", "<p><a href=\"my_(url)\" title=\"title (with parens)\">Foo*bar]</a></p>"; "example_194")]
// #[test_case("[Foo bar]:\n<my url>\n\'title\'\n\n[Foo bar]", "<p><a href=\"my%20url\" title=\"title\">Foo bar</a></p>"; "example_195")]
// #[test_case("[foo]: /url \'\ntitle\nline1\nline2\n\'\n\n[foo]", "<p><a href=\"/url\" title=\"\ntitle\nline1\nline2\n\">foo</a></p>"; "example_196")]
// #[test_case("[foo]: /url \'title\n\nwith blank line\'\n\n[foo]", "<p>[foo]: /url \'title</p>\n<p>with blank line\'</p>\n<p>[foo]</p>"; "example_197")]
// #[test_case("[foo]:\n/url\n\n[foo]", "<p><a href=\"/url\">foo</a></p>"; "example_198")]
// #[test_case("[foo]:\n\n[foo]", "<p>[foo]:</p>\n<p>[foo]</p>"; "example_199")]
// #[test_case("[foo]: <>\n\n[foo]", "<p><a href=\"\">foo</a></p>"; "example_200")]
// #[test_case("[foo]: <bar>(baz)\n\n[foo]", "<p>[foo]: <bar>(baz)</p>\n<p>[foo]</p>"; "example_201")]
// #[test_case("[foo]: /url\\bar\\*baz \"foo\\\"bar\\baz\"\n\n[foo]", "<p><a href=\"/url%5Cbar*baz\" title=\"foo&quot;bar\\baz\">foo</a></p>"; "example_202")]
// #[test_case("[foo]\n\n[foo]: url", "<p><a href=\"url\">foo</a></p>"; "example_203")]
// #[test_case("[foo]\n\n[foo]: first\n[foo]: second", "<p><a href=\"first\">foo</a></p>"; "example_204")]
// #[test_case("[FOO]: /url\n\n[Foo]", "<p><a href=\"/url\">Foo</a></p>"; "example_205")]
// #[test_case("[\u{391}\u{393}\u{3a9}]: /\u{3c6}\u{3bf}\u{3c5}\n\n[\u{3b1}\u{3b3}\u{3c9}]", "<p><a href=\"/%CF%86%CE%BF%CF%85\">\u{3b1}\u{3b3}\u{3c9}</a></p>"; "example_206")]
// #[test_case("[foo]: /url", ""; "example_207")]
// #[test_case("[\nfoo\n]: /url\nbar", "<p>bar</p>"; "example_208")]
// #[test_case("[foo]: /url \"title\" ok", "<p>[foo]: /url &quot;title&quot; ok</p>"; "example_209")]
// #[test_case("[foo]: /url\n\"title\" ok", "<p>&quot;title&quot; ok</p>"; "example_210")]
// #[test_case("    [foo]: /url \"title\"\n\n[foo]", "<pre><code>[foo]: /url &quot;title&quot;\n</code></pre>\n<p>[foo]</p>"; "example_211")]
// #[test_case("```\n[foo]: /url\n```\n\n[foo]", "<pre><code>[foo]: /url\n</code></pre>\n<p>[foo]</p>"; "example_212")]
// #[test_case("Foo\n[bar]: /baz\n\n[bar]", "<p>Foo\n[bar]: /baz</p>\n<p>[bar]</p>"; "example_213")]
// #[test_case("# [Foo]\n[foo]: /url\n> bar", "<h1><a href=\"/url\">Foo</a></h1>\n<blockquote>\n<p>bar</p>\n</blockquote>"; "example_214")]
// #[test_case("[foo]: /url\nbar\n===\n[foo]", "<h1>bar</h1>\n<p><a href=\"/url\">foo</a></p>"; "example_215")]
// #[test_case("[foo]: /url\n===\n[foo]", "<p>===\n<a href=\"/url\">foo</a></p>"; "example_216")]
// #[test_case("[foo]: /foo-url \"foo\"\n[bar]: /bar-url\n  \"bar\"\n[baz]: /baz-url\n\n[foo],\n[bar],\n[baz]", "<p><a href=\"/foo-url\" title=\"foo\">foo</a>,\n<a href=\"/bar-url\" title=\"bar\">bar</a>,\n<a href=\"/baz-url\">baz</a></p>"; "example_217")]
// #[test_case("[foo]\n\n> [foo]: /url", "<p><a href=\"/url\">foo</a></p>\n<blockquote>\n</blockquote>"; "example_218")]
fn link_reference_definitions(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("[link](/uri \"title\")", "<p><a href=\"/uri\" title=\"title\">link</a></p>"; "example_482")]
#[test_case("[link](/uri)", "<p><a href=\"/uri\">link</a></p>"; "example_483")]
#[test_case("[](./target.md)", "<p><a href=\"./target.md\"></a></p>"; "example_484")]
#[test_case("[link]()", "<p><a href=\"\">link</a></p>"; "example_485")]
// #[test_case("[link](<>)", "<p><a href=\"\">link</a></p>"; "example_486")]
#[test_case("[]()", "<p><a href=\"\"></a></p>"; "example_487")]
#[test_case("[link](/my uri)", "<p>[link](/my uri)</p>"; "example_488")]
// #[test_case("[link](</my uri>)", "<p><a href=\"/my%20uri\">link</a></p>"; "example_489")]
#[test_case("[link](foo\nbar)", "<p>[link](foo\nbar)</p>"; "example_490")]
// #[test_case("[link](<foo\nbar>)", "<p>[link](<foo\nbar>)</p>"; "example_491")]
// #[test_case("[a](<b)c>)", "<p><a href=\"b)c\">a</a></p>"; "example_492")]
// #[test_case("[link](<foo\\>)", "<p>[link](&lt;foo&gt;)</p>"; "example_493")]
// #[test_case("[a](<b)c\n[a](<b)c>\n[a](<b>c)", "<p>[a](&lt;b)c\n[a](&lt;b)c&gt;\n[a](<b>c)</p>"; "example_494")]
#[test_case("[link](\\(foo\\))", "<p><a href=\"(foo)\">link</a></p>"; "example_495")]
#[test_case("[link](foo(and(bar)))", "<p><a href=\"foo(and(bar))\">link</a></p>"; "example_496")]
#[test_case("[link](foo(and(bar))", "<p>[link](foo(and(bar))</p>"; "example_497")]
#[test_case("[link](foo\\(and\\(bar\\))", "<p><a href=\"foo(and(bar)\">link</a></p>"; "example_498")]
// #[test_case("[link](<foo(and(bar)>)", "<p><a href=\"foo(and(bar)\">link</a></p>"; "example_499")]
#[test_case("[link](foo\\)\\:)", "<p><a href=\"foo):\">link</a></p>"; "example_500")]
#[test_case("[link](#fragment)\n\n[link](https://example.com#fragment)\n\n[link](https://example.com?foo=3#frag)", "<p><a href=\"#fragment\">link</a></p>\n<p><a href=\"https://example.com#fragment\">link</a></p>\n<p><a href=\"https://example.com?foo=3#frag\">link</a></p>"; "example_501")]
#[test_case("[link](foo\\bar)", "<p><a href=\"foo%5Cbar\">link</a></p>"; "example_502")]
#[test_case("[link](foo%20b&auml;)", "<p><a href=\"foo%20b%C3%A4\">link</a></p>"; "example_503")]
#[test_case("[link](\"title\")", "<p><a href=\"%22title%22\">link</a></p>"; "example_504")]
#[test_case("[link](/url \"title\")\n[link](/url \'title\')\n[link](/url (title))", "<p><a href=\"/url\" title=\"title\">link</a>\n<a href=\"/url\" title=\"title\">link</a>\n<a href=\"/url\" title=\"title\">link</a></p>"; "example_505")]
#[test_case("[link](/url \"title \\\"&quot;\")", "<p><a href=\"/url\" title=\"title &quot;&quot;\">link</a></p>"; "example_506")]
#[test_case("[link](/url\u{a0}\"title\")", "<p><a href=\"/url%C2%A0%22title%22\">link</a></p>"; "example_507")]
#[test_case("[link](/url \"title \"and\" title\")", "<p>[link](/url &quot;title &quot;and&quot; title&quot;)</p>"; "example_508")]
#[test_case("[link](/url \'title \"and\" title\')", "<p><a href=\"/url\" title=\"title &quot;and&quot; title\">link</a></p>"; "example_509")]
#[test_case("[link](   /uri\n  \"title\"  )", "<p><a href=\"/uri\" title=\"title\">link</a></p>"; "example_510")]
#[test_case("[link] (/uri)", "<p>[link] (/uri)</p>"; "example_511")]
#[test_case("[link [foo [bar]]](/uri)", "<p><a href=\"/uri\">link [foo [bar]]</a></p>"; "example_512")]
#[test_case("[link] bar](/uri)", "<p>[link] bar](/uri)</p>"; "example_513")]
#[test_case("[link [bar](/uri)", "<p>[link <a href=\"/uri\">bar</a></p>"; "example_514")]
#[test_case("[link \\[bar](/uri)", "<p><a href=\"/uri\">link [bar</a></p>"; "example_515")]
#[test_case("[link *foo **bar** `#`*](/uri)", "<p><a href=\"/uri\">link <em>foo <strong>bar</strong> <code>#</code></em></a></p>"; "example_516")]
#[test_case("[![moon](moon.jpg)](/uri)", "<p><a href=\"/uri\"><img src=\"moon.jpg\" alt=\"moon\" /></a></p>"; "example_517")]
#[test_case("[foo [bar](/uri)](/uri)", "<p>[foo <a href=\"/uri\">bar</a>](/uri)</p>"; "example_518")]
#[test_case("[foo *[bar [baz](/uri)](/uri)*](/uri)", "<p>[foo <em>[bar <a href=\"/uri\">baz</a>](/uri)</em>](/uri)</p>"; "example_519")]
#[test_case("![[[foo](uri1)](uri2)](uri3)", "<p><img src=\"uri3\" alt=\"[foo](uri2)\" /></p>"; "example_520")]
#[test_case("*[foo*](/uri)", "<p>*<a href=\"/uri\">foo*</a></p>"; "example_521")]
#[test_case("[foo *bar](baz*)", "<p><a href=\"baz*\">foo *bar</a></p>"; "example_522")]
#[test_case("*foo [bar* baz]", "<p><em>foo [bar</em> baz]</p>"; "example_523")]
// #[test_case("[foo <bar attr=\"](baz)\">", "<p>[foo <bar attr=\"](baz)\"></p>"; "example_524")]
#[test_case("[foo`](/uri)`", "<p>[foo<code>](/uri)</code></p>"; "example_525")]
// #[test_case("[foo<https://example.com/?search=](uri)>", "<p>[foo<a href=\"https://example.com/?search=%5D(uri)\">https://example.com/?search=](uri)</a></p>"; "example_526")]
// #[test_case("[foo][bar]\n\n[bar]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">foo</a></p>"; "example_527")]
// #[test_case("[link [foo [bar]]][ref]\n\n[ref]: /uri", "<p><a href=\"/uri\">link [foo [bar]]</a></p>"; "example_528")]
// #[test_case("[link \\[bar][ref]\n\n[ref]: /uri", "<p><a href=\"/uri\">link [bar</a></p>"; "example_529")]
// #[test_case("[link *foo **bar** `#`*][ref]\n\n[ref]: /uri", "<p><a href=\"/uri\">link <em>foo <strong>bar</strong> <code>#</code></em></a></p>"; "example_530")]
// #[test_case("[![moon](moon.jpg)][ref]\n\n[ref]: /uri", "<p><a href=\"/uri\"><img src=\"moon.jpg\" alt=\"moon\" /></a></p>"; "example_531")]
// #[test_case("[foo [bar](/uri)][ref]\n\n[ref]: /uri", "<p>[foo <a href=\"/uri\">bar</a>]<a href=\"/uri\">ref</a></p>"; "example_532")]
// #[test_case("[foo *bar [baz][ref]*][ref]\n\n[ref]: /uri", "<p>[foo <em>bar <a href=\"/uri\">baz</a></em>]<a href=\"/uri\">ref</a></p>"; "example_533")]
// #[test_case("*[foo*][ref]\n\n[ref]: /uri", "<p>*<a href=\"/uri\">foo*</a></p>"; "example_534")]
// #[test_case("[foo *bar][ref]*\n\n[ref]: /uri", "<p><a href=\"/uri\">foo *bar</a>*</p>"; "example_535")]
// #[test_case("[foo <bar attr=\"][ref]\">\n\n[ref]: /uri", "<p>[foo <bar attr=\"][ref]\"></p>"; "example_536")]
// #[test_case("[foo`][ref]`\n\n[ref]: /uri", "<p>[foo<code>][ref]</code></p>"; "example_537")]
// #[test_case("[foo<https://example.com/?search=][ref]>\n\n[ref]: /uri", "<p>[foo<a href=\"https://example.com/?search=%5D%5Bref%5D\">https://example.com/?search=][ref]</a></p>"; "example_538")]
// #[test_case("[foo][BaR]\n\n[bar]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">foo</a></p>"; "example_539")]
// #[test_case("[\u{1e9e}]\n\n[SS]: /url", "<p><a href=\"/url\">\u{1e9e}</a></p>"; "example_540")]
// #[test_case("[Foo\n  bar]: /url\n\n[Baz][Foo bar]", "<p><a href=\"/url\">Baz</a></p>"; "example_541")]
// #[test_case("[foo] [bar]\n\n[bar]: /url \"title\"", "<p>[foo] <a href=\"/url\" title=\"title\">bar</a></p>"; "example_542")]
// #[test_case("[foo]\n[bar]\n\n[bar]: /url \"title\"", "<p>[foo]\n<a href=\"/url\" title=\"title\">bar</a></p>"; "example_543")]
// #[test_case("[foo]: /url1\n\n[foo]: /url2\n\n[bar][foo]", "<p><a href=\"/url1\">bar</a></p>"; "example_544")]
// #[test_case("[bar][foo\\!]\n\n[foo!]: /url", "<p>[bar][foo!]</p>"; "example_545")]
// #[test_case("[foo][ref[]\n\n[ref[]: /uri", "<p>[foo][ref[]</p>\n<p>[ref[]: /uri</p>"; "example_546")]
// #[test_case("[foo][ref[bar]]\n\n[ref[bar]]: /uri", "<p>[foo][ref[bar]]</p>\n<p>[ref[bar]]: /uri</p>"; "example_547")]
// #[test_case("[[[foo]]]\n\n[[[foo]]]: /url", "<p>[[[foo]]]</p>\n<p>[[[foo]]]: /url</p>"; "example_548")]
// #[test_case("[foo][ref\\[]\n\n[ref\\[]: /uri", "<p><a href=\"/uri\">foo</a></p>"; "example_549")]
// #[test_case("[bar\\\\]: /uri\n\n[bar\\\\]", "<p><a href=\"/uri\">bar\\</a></p>"; "example_550")]
// #[test_case("[]\n\n[]: /uri", "<p>[]</p>\n<p>[]: /uri</p>"; "example_551")]
// #[test_case("[\n ]\n\n[\n ]: /uri", "<p>[\n]</p>\n<p>[\n]: /uri</p>"; "example_552")]
// #[test_case("[foo][]\n\n[foo]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">foo</a></p>"; "example_553")]
// #[test_case("[*foo* bar][]\n\n[*foo* bar]: /url \"title\"", "<p><a href=\"/url\" title=\"title\"><em>foo</em> bar</a></p>"; "example_554")]
// #[test_case("[Foo][]\n\n[foo]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">Foo</a></p>"; "example_555")]
// #[test_case("[foo] \n[]\n\n[foo]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">foo</a>\n[]</p>"; "example_556")]
// #[test_case("[foo]\n\n[foo]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">foo</a></p>"; "example_557")]
// #[test_case("[*foo* bar]\n\n[*foo* bar]: /url \"title\"", "<p><a href=\"/url\" title=\"title\"><em>foo</em> bar</a></p>"; "example_558")]
// #[test_case("[[*foo* bar]]\n\n[*foo* bar]: /url \"title\"", "<p>[<a href=\"/url\" title=\"title\"><em>foo</em> bar</a>]</p>"; "example_559")]
// #[test_case("[[bar [foo]\n\n[foo]: /url", "<p>[[bar <a href=\"/url\">foo</a></p>"; "example_560")]
// #[test_case("[Foo]\n\n[foo]: /url \"title\"", "<p><a href=\"/url\" title=\"title\">Foo</a></p>"; "example_561")]
// #[test_case("[foo] bar\n\n[foo]: /url", "<p><a href=\"/url\">foo</a> bar</p>"; "example_562")]
// #[test_case("\\[foo]\n\n[foo]: /url \"title\"", "<p>[foo]</p>"; "example_563")]
// #[test_case("[foo*]: /url\n\n*[foo*]", "<p>*<a href=\"/url\">foo*</a></p>"; "example_564")]
// #[test_case("[foo][bar]\n\n[foo]: /url1\n[bar]: /url2", "<p><a href=\"/url2\">foo</a></p>"; "example_565")]
// #[test_case("[foo][]\n\n[foo]: /url1", "<p><a href=\"/url1\">foo</a></p>"; "example_566")]
// #[test_case("[foo]()\n\n[foo]: /url1", "<p><a href=\"\">foo</a></p>"; "example_567")]
// #[test_case("[foo](not a link)\n\n[foo]: /url1", "<p><a href=\"/url1\">foo</a>(not a link)</p>"; "example_568")]
// #[test_case("[foo][bar][baz]\n\n[baz]: /url", "<p>[foo]<a href=\"/url\">bar</a></p>"; "example_569")]
// #[test_case("[foo][bar][baz]\n\n[baz]: /url1\n[bar]: /url2", "<p><a href=\"/url2\">foo</a><a href=\"/url1\">baz</a></p>"; "example_570")]
// #[test_case("[foo][bar][baz]\n\n[baz]: /url1\n[foo]: /url2", "<p>[foo]<a href=\"/url1\">bar</a></p>"; "example_571")]
fn links(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("A paragraph\nwith two lines.\n\n    indented code\n\n> A block quote.", "<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>"; "example_253")]
// #[test_case("1.  A paragraph\n    with two lines.\n\n        indented code\n\n    > A block quote.", "<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>"; "example_254")]
// #[test_case("- one\n\n two", "<ul>\n<li>one</li>\n</ul>\n<p>two</p>"; "example_255")]
// #[test_case("- one\n\n  two", "<ul>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ul>"; "example_256")]
// #[test_case(" -    one\n\n     two", "<ul>\n<li>one</li>\n</ul>\n<pre><code> two\n</code></pre>"; "example_257")]
// #[test_case(" -    one\n\n      two", "<ul>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ul>"; "example_258")]
// #[test_case("   > > 1.  one\n>>\n>>     two", "<blockquote>\n<blockquote>\n<ol>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ol>\n</blockquote>\n</blockquote>"; "example_259")]
// #[test_case(">>- one\n>>\n  >  > two", "<blockquote>\n<blockquote>\n<ul>\n<li>one</li>\n</ul>\n<p>two</p>\n</blockquote>\n</blockquote>"; "example_260")]
// #[test_case("-one\n\n2.two", "<p>-one</p>\n<p>2.two</p>"; "example_261")]
// #[test_case("- foo\n\n\n  bar", "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>"; "example_262")]
// #[test_case("1.  foo\n\n    ```\n    bar\n    ```\n\n    baz\n\n    > bam", "<ol>\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n<p>baz</p>\n<blockquote>\n<p>bam</p>\n</blockquote>\n</li>\n</ol>"; "example_263")]
// #[test_case("- Foo\n\n      bar\n\n\n      baz", "<ul>\n<li>\n<p>Foo</p>\n<pre><code>bar\n\n\nbaz\n</code></pre>\n</li>\n</ul>"; "example_264")]
// #[test_case("123456789. ok", "<ol start=\"123456789\">\n<li>ok</li>\n</ol>"; "example_265")]
// #[test_case("1234567890. not ok", "<p>1234567890. not ok</p>"; "example_266")]
// #[test_case("0. ok", "<ol start=\"0\">\n<li>ok</li>\n</ol>"; "example_267")]
// #[test_case("003. ok", "<ol start=\"3\">\n<li>ok</li>\n</ol>"; "example_268")]
// #[test_case("-1. not ok", "<p>-1. not ok</p>"; "example_269")]
// #[test_case("- foo\n\n      bar", "<ul>\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n</li>\n</ul>"; "example_270")]
// #[test_case("  10.  foo\n\n           bar", "<ol start=\"10\">\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n</li>\n</ol>"; "example_271")]
// #[test_case("    indented code\n\nparagraph\n\n    more code", "<pre><code>indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>"; "example_272")]
// #[test_case("1.     indented code\n\n   paragraph\n\n       more code", "<ol>\n<li>\n<pre><code>indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>\n</li>\n</ol>"; "example_273")]
// #[test_case("1.      indented code\n\n   paragraph\n\n       more code", "<ol>\n<li>\n<pre><code> indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>\n</li>\n</ol>"; "example_274")]
// #[test_case("   foo\n\nbar", "<p>foo</p>\n<p>bar</p>"; "example_275")]
// #[test_case("-    foo\n\n  bar", "<ul>\n<li>foo</li>\n</ul>\n<p>bar</p>"; "example_276")]
// #[test_case("-  foo\n\n   bar", "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>"; "example_277")]
// #[test_case("-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz", "<ul>\n<li>foo</li>\n<li>\n<pre><code>bar\n</code></pre>\n</li>\n<li>\n<pre><code>baz\n</code></pre>\n</li>\n</ul>"; "example_278")]
// #[test_case("-   \n  foo", "<ul>\n<li>foo</li>\n</ul>"; "example_279")]
// #[test_case("-\n\n  foo", "<ul>\n<li></li>\n</ul>\n<p>foo</p>"; "example_280")]
// #[test_case("- foo\n-\n- bar", "<ul>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ul>"; "example_281")]
// #[test_case("- foo\n-   \n- bar", "<ul>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ul>"; "example_282")]
// #[test_case("1. foo\n2.\n3. bar", "<ol>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ol>"; "example_283")]
// #[test_case("*", "<ul>\n<li></li>\n</ul>"; "example_284")]
// #[test_case("foo\n*\n\nfoo\n1.", "<p>foo\n*</p>\n<p>foo\n1.</p>"; "example_285")]
// #[test_case(" 1.  A paragraph\n     with two lines.\n\n         indented code\n\n     > A block quote.", "<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>"; "example_286")]
// #[test_case("  1.  A paragraph\n      with two lines.\n\n          indented code\n\n      > A block quote.", "<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>"; "example_287")]
// #[test_case("   1.  A paragraph\n       with two lines.\n\n           indented code\n\n       > A block quote.", "<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>"; "example_288")]
// #[test_case("    1.  A paragraph\n        with two lines.\n\n            indented code\n\n        > A block quote.", "<pre><code>1.  A paragraph\n    with two lines.\n\n        indented code\n\n    &gt; A block quote.\n</code></pre>"; "example_289")]
// #[test_case("  1.  A paragraph\nwith two lines.\n\n          indented code\n\n      > A block quote.", "<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>"; "example_290")]
// #[test_case("  1.  A paragraph\n    with two lines.", "<ol>\n<li>A paragraph\nwith two lines.</li>\n</ol>"; "example_291")]
// #[test_case("> 1. > Blockquote\ncontinued here.", "<blockquote>\n<ol>\n<li>\n<blockquote>\n<p>Blockquote\ncontinued here.</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>"; "example_292")]
// #[test_case("> 1. > Blockquote\n> continued here.", "<blockquote>\n<ol>\n<li>\n<blockquote>\n<p>Blockquote\ncontinued here.</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>"; "example_293")]
// #[test_case("- foo\n  - bar\n    - baz\n      - boo", "<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>baz\n<ul>\n<li>boo</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"; "example_294")]
// #[test_case("- foo\n - bar\n  - baz\n   - boo", "<ul>\n<li>foo</li>\n<li>bar</li>\n<li>baz</li>\n<li>boo</li>\n</ul>"; "example_295")]
// #[test_case("10) foo\n    - bar", "<ol start=\"10\">\n<li>foo\n<ul>\n<li>bar</li>\n</ul>\n</li>\n</ol>"; "example_296")]
// #[test_case("10) foo\n   - bar", "<ol start=\"10\">\n<li>foo</li>\n</ol>\n<ul>\n<li>bar</li>\n</ul>"; "example_297")]
// #[test_case("- - foo", "<ul>\n<li>\n<ul>\n<li>foo</li>\n</ul>\n</li>\n</ul>"; "example_298")]
// #[test_case("1. - 2. foo", "<ol>\n<li>\n<ul>\n<li>\n<ol start=\"2\">\n<li>foo</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>"; "example_299")]
// #[test_case("- # Foo\n- Bar\n  ---\n  baz", "<ul>\n<li>\n<h1>Foo</h1>\n</li>\n<li>\n<h2>Bar</h2>\nbaz</li>\n</ul>"; "example_300")]
fn list_items(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("- foo\n- bar\n+ baz", "<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>\n<ul>\n<li>baz</li>\n</ul>"; "example_301")]
// #[test_case("1. foo\n2. bar\n3) baz", "<ol>\n<li>foo</li>\n<li>bar</li>\n</ol>\n<ol start=\"3\">\n<li>baz</li>\n</ol>"; "example_302")]
// #[test_case("Foo\n- bar\n- baz", "<p>Foo</p>\n<ul>\n<li>bar</li>\n<li>baz</li>\n</ul>"; "example_303")]
// #[test_case("The number of windows in my house is\n14.  The number of doors is 6.", "<p>The number of windows in my house is\n14.  The number of doors is 6.</p>"; "example_304")]
// #[test_case("The number of windows in my house is\n1.  The number of doors is 6.", "<p>The number of windows in my house is</p>\n<ol>\n<li>The number of doors is 6.</li>\n</ol>"; "example_305")]
// #[test_case("- foo\n\n- bar\n\n\n- baz", "<ul>\n<li>\n<p>foo</p>\n</li>\n<li>\n<p>bar</p>\n</li>\n<li>\n<p>baz</p>\n</li>\n</ul>"; "example_306")]
// #[test_case("- foo\n  - bar\n    - baz\n\n\n      bim", "<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>\n<p>baz</p>\n<p>bim</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"; "example_307")]
// #[test_case("- foo\n- bar\n\n<!-- -->\n\n- baz\n- bim", "<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>\n<!-- -->\n<ul>\n<li>baz</li>\n<li>bim</li>\n</ul>"; "example_308")]
// #[test_case("-   foo\n\n    notcode\n\n-   foo\n\n<!-- -->\n\n    code", "<ul>\n<li>\n<p>foo</p>\n<p>notcode</p>\n</li>\n<li>\n<p>foo</p>\n</li>\n</ul>\n<!-- -->\n<pre><code>code\n</code></pre>"; "example_309")]
// #[test_case("- a\n - b\n  - c\n   - d\n  - e\n - f\n- g", "<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n<li>d</li>\n<li>e</li>\n<li>f</li>\n<li>g</li>\n</ul>"; "example_310")]
// #[test_case("1. a\n\n  2. b\n\n   3. c", "<ol>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>c</p>\n</li>\n</ol>"; "example_311")]
// #[test_case("- a\n - b\n  - c\n   - d\n    - e", "<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n<li>d\n- e</li>\n</ul>"; "example_312")]
// #[test_case("1. a\n\n  2. b\n\n    3. c", "<ol>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n</ol>\n<pre><code>3. c\n</code></pre>"; "example_313")]
// #[test_case("- a\n- b\n\n- c", "<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>c</p>\n</li>\n</ul>"; "example_314")]
// #[test_case("* a\n*\n\n* c", "<ul>\n<li>\n<p>a</p>\n</li>\n<li></li>\n<li>\n<p>c</p>\n</li>\n</ul>"; "example_315")]
// #[test_case("- a\n- b\n\n  c\n- d", "<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n<p>c</p>\n</li>\n<li>\n<p>d</p>\n</li>\n</ul>"; "example_316")]
// #[test_case("- a\n- b\n\n  [ref]: /url\n- d", "<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>d</p>\n</li>\n</ul>"; "example_317")]
// #[test_case("- a\n- ```\n  b\n\n\n  ```\n- c", "<ul>\n<li>a</li>\n<li>\n<pre><code>b\n\n\n</code></pre>\n</li>\n<li>c</li>\n</ul>"; "example_318")]
// #[test_case("- a\n  - b\n\n    c\n- d", "<ul>\n<li>a\n<ul>\n<li>\n<p>b</p>\n<p>c</p>\n</li>\n</ul>\n</li>\n<li>d</li>\n</ul>"; "example_319")]
// #[test_case("* a\n  > b\n  >\n* c", "<ul>\n<li>a\n<blockquote>\n<p>b</p>\n</blockquote>\n</li>\n<li>c</li>\n</ul>"; "example_320")]
// #[test_case("- a\n  > b\n  ```\n  c\n  ```\n- d", "<ul>\n<li>a\n<blockquote>\n<p>b</p>\n</blockquote>\n<pre><code>c\n</code></pre>\n</li>\n<li>d</li>\n</ul>"; "example_321")]
// #[test_case("- a", "<ul>\n<li>a</li>\n</ul>"; "example_322")]
// #[test_case("- a\n  - b", "<ul>\n<li>a\n<ul>\n<li>b</li>\n</ul>\n</li>\n</ul>"; "example_323")]
// #[test_case("1. ```\n   foo\n   ```\n\n   bar", "<ol>\n<li>\n<pre><code>foo\n</code></pre>\n<p>bar</p>\n</li>\n</ol>"; "example_324")]
// #[test_case("* foo\n  * bar\n\n  baz", "<ul>\n<li>\n<p>foo</p>\n<ul>\n<li>bar</li>\n</ul>\n<p>baz</p>\n</li>\n</ul>"; "example_325")]
// #[test_case("- a\n  - b\n  - c\n\n- d\n  - e\n  - f", "<ul>\n<li>\n<p>a</p>\n<ul>\n<li>b</li>\n<li>c</li>\n</ul>\n</li>\n<li>\n<p>d</p>\n<ul>\n<li>e</li>\n<li>f</li>\n</ul>\n</li>\n</ul>"; "example_326")]
fn lists(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("aaa\n\nbbb", "<p>aaa</p>\n<p>bbb</p>"; "example_219")]
#[test_case("aaa\nbbb\n\nccc\nddd", "<p>aaa\nbbb</p>\n<p>ccc\nddd</p>"; "example_220")]
#[test_case("aaa\n\n\nbbb", "<p>aaa</p>\n<p>bbb</p>"; "example_221")]
#[test_case("  aaa\n bbb", "<p>aaa\nbbb</p>"; "example_222")]
#[test_case("aaa\n             bbb\n                                       ccc", "<p>aaa\nbbb\nccc</p>"; "example_223")]
#[test_case("   aaa\nbbb", "<p>aaa\nbbb</p>"; "example_224")]
#[test_case("    aaa\nbbb", "<pre><code>aaa\n</code></pre>\n<p>bbb</p>"; "example_225")]
#[test_case("aaa     \nbbb     ", "<p>aaa<br />\nbbb</p>"; "example_226")]
fn paragraphs(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("- `one\n- two`", "<ul>\n<li>`one</li>\n<li>two`</li>\n</ul>"; "example_42")]
fn precedence(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[allow(unused)]
// #[test_case("<a><bab><c2c>", "<p><a><bab><c2c></p>"; "example_613")]
// #[test_case("<a/><b2/>", "<p><a/><b2/></p>"; "example_614")]
// #[test_case("<a  /><b2\ndata=\"foo\" >", "<p><a  /><b2\ndata=\"foo\" ></p>"; "example_615")]
// #[test_case("<a foo=\"bar\" bam = \'baz <em>\"</em>\'\n_boolean zoop:33=zoop:33 />", "<p><a foo=\"bar\" bam = \'baz <em>\"</em>\'\n_boolean zoop:33=zoop:33 /></p>"; "example_616")]
// #[test_case("Foo <responsive-image src=\"foo.jpg\" />", "<p>Foo <responsive-image src=\"foo.jpg\" /></p>"; "example_617")]
// #[test_case("<33> <__>", "<p>&lt;33&gt; &lt;__&gt;</p>"; "example_618")]
// #[test_case("<a h*#ref=\"hi\">", "<p>&lt;a h*#ref=&quot;hi&quot;&gt;</p>"; "example_619")]
// #[test_case("<a href=\"hi\'> <a href=hi\'>", "<p>&lt;a href=&quot;hi\'&gt; &lt;a href=hi\'&gt;</p>"; "example_620")]
// #[test_case("< a><\nfoo><bar/ >\n<foo bar=baz\nbim!bop />", "<p>&lt; a&gt;&lt;\nfoo&gt;&lt;bar/ &gt;\n&lt;foo bar=baz\nbim!bop /&gt;</p>"; "example_621")]
// #[test_case("<a href=\'bar\'title=title>", "<p>&lt;a href=\'bar\'title=title&gt;</p>"; "example_622")]
// #[test_case("</a></foo >", "<p></a></foo ></p>"; "example_623")]
// #[test_case("</a href=\"foo\">", "<p>&lt;/a href=&quot;foo&quot;&gt;</p>"; "example_624")]
// #[test_case("foo <!-- this is a --\ncomment - with hyphens -->", "<p>foo <!-- this is a --\ncomment - with hyphens --></p>"; "example_625")]
// #[test_case("foo <!--> foo -->\n\nfoo <!---> foo -->", "<p>foo <!--> foo --&gt;</p>\n<p>foo <!---> foo --&gt;</p>"; "example_626")]
// #[test_case("foo <?php echo $a; ?>", "<p>foo <?php echo $a; ?></p>"; "example_627")]
// #[test_case("foo <!ELEMENT br EMPTY>", "<p>foo <!ELEMENT br EMPTY></p>"; "example_628")]
// #[test_case("foo <![CDATA[>&<]]>", "<p>foo <![CDATA[>&<]]></p>"; "example_629")]
// #[test_case("foo <a href=\"&ouml;\">", "<p>foo <a href=\"&ouml;\"></p>"; "example_630")]
// #[test_case("foo <a href=\"\\*\">", "<p>foo <a href=\"\\*\"></p>"; "example_631")]
// #[test_case("<a href=\"\\\"\">", "<p>&lt;a href=&quot;&quot;&quot;&gt;</p>"; "example_632")]
fn raw_html(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("Foo *bar*\n=========\n\nFoo *bar*\n---------", "<h1>Foo <em>bar</em></h1>\n<h2>Foo <em>bar</em></h2>"; "example_80")]
#[test_case("Foo *bar\nbaz*\n====", "<h1>Foo <em>bar\nbaz</em></h1>"; "example_81")]
#[test_case("  Foo *bar\nbaz*\t\n====", "<h1>Foo <em>bar\nbaz</em></h1>"; "example_82")]
#[test_case("Foo\n-------------------------\n\nFoo\n=", "<h2>Foo</h2>\n<h1>Foo</h1>"; "example_83")]
#[test_case("   Foo\n---\n\n  Foo\n-----\n\n  Foo\n  ===", "<h2>Foo</h2>\n<h2>Foo</h2>\n<h1>Foo</h1>"; "example_84")]
#[test_case("    Foo\n    ---\n\n    Foo\n---", "<pre><code>Foo\n---\n\nFoo\n</code></pre>\n<hr />"; "example_85")]
#[test_case("Foo\n   ----      ", "<h2>Foo</h2>"; "example_86")]
#[test_case("Foo\n    ---", "<p>Foo\n---</p>"; "example_87")]
#[test_case("Foo\n= =\n\nFoo\n--- -", "<p>Foo\n= =</p>\n<p>Foo</p>\n<hr />"; "example_88")]
#[test_case("Foo  \n-----", "<h2>Foo</h2>"; "example_89")]
#[test_case("Foo\\\n----", "<h2>Foo\\</h2>"; "example_90")]
// #[test_case("`Foo\n----\n`\n\n<a title=\"a lot\n---\nof dashes\"/>", "<h2>`Foo</h2>\n<p>`</p>\n<h2>&lt;a title=&quot;a lot</h2>\n<p>of dashes&quot;/&gt;</p>"; "example_91")]
// #[test_case("> Foo\n---", "<blockquote>\n<p>Foo</p>\n</blockquote>\n<hr />"; "example_92")]
// #[test_case("> foo\nbar\n===", "<blockquote>\n<p>foo\nbar\n===</p>\n</blockquote>"; "example_93")]
// #[test_case("- Foo\n---", "<ul>\n<li>Foo</li>\n</ul>\n<hr />"; "example_94")]
#[test_case("Foo\nBar\n---", "<h2>Foo\nBar</h2>"; "example_95")]
#[test_case("---\nFoo\n---\nBar\n---\nBaz", "<hr />\n<h2>Foo</h2>\n<h2>Bar</h2>\n<p>Baz</p>"; "example_96")]
#[test_case("\n====", "<p>====</p>"; "example_97")]
#[test_case("---\n---", "<hr />\n<hr />"; "example_98")]
// #[test_case("- foo\n-----", "<ul>\n<li>foo</li>\n</ul>\n<hr />"; "example_99")]
#[test_case("    foo\n---", "<pre><code>foo\n</code></pre>\n<hr />"; "example_100")]
// #[test_case("> foo\n-----", "<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />"; "example_101")]
#[test_case("\\> foo\n------", "<h2>&gt; foo</h2>"; "example_102")]
#[test_case("Foo\n\nbar\n---\nbaz", "<p>Foo</p>\n<h2>bar</h2>\n<p>baz</p>"; "example_103")]
#[test_case("Foo\nbar\n\n---\n\nbaz", "<p>Foo\nbar</p>\n<hr />\n<p>baz</p>"; "example_104")]
#[test_case("Foo\nbar\n* * *\nbaz", "<p>Foo\nbar</p>\n<hr />\n<p>baz</p>"; "example_105")]
#[test_case("Foo\nbar\n\\---\nbaz", "<p>Foo\nbar\n---\nbaz</p>"; "example_106")]
fn setext_headings(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("foo\nbaz", "<p>foo\nbaz</p>"; "example_648")]
#[test_case("foo \n baz", "<p>foo\nbaz</p>"; "example_649")]
fn soft_line_breaks(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("\tfoo\tbaz\t\tbim", "<pre><code>foo\tbaz\t\tbim\n</code></pre>"; "example_1")]
#[test_case("  \tfoo\tbaz\t\tbim", "<pre><code>foo\tbaz\t\tbim\n</code></pre>"; "example_2")]
#[test_case("    a\ta\n    \u{1f50}\ta", "<pre><code>a\ta\n\u{1f50}\ta\n</code></pre>"; "example_3")]
// #[test_case("  - foo\n\n\tbar", "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>"; "example_4")]
// #[test_case("- foo\n\n\t\tbar", "<ul>\n<li>\n<p>foo</p>\n<pre><code>  bar\n</code></pre>\n</li>\n</ul>"; "example_5")]
// #[test_case(">\t\tfoo", "<blockquote>\n<pre><code>  foo\n</code></pre>\n</blockquote>"; "example_6")]
// #[test_case("-\t\tfoo", "<ul>\n<li>\n<pre><code>  foo\n</code></pre>\n</li>\n</ul>"; "example_7")]
#[test_case("    foo\n\tbar", "<pre><code>foo\nbar\n</code></pre>"; "example_8")]
// #[test_case(" - foo\n   - bar\n\t - baz", "<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>baz</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"; "example_9")]
#[test_case("#\tFoo", "<h1>Foo</h1>"; "example_10")]
#[test_case("*\t*\t*\t", "<hr />"; "example_11")]
fn tabs(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("hello $.;\'there", "<p>hello $.;\'there</p>"; "example_650")]
#[test_case("Foo \u{3c7}\u{3c1}\u{1fc6}\u{3bd}", "<p>Foo \u{3c7}\u{3c1}\u{1fc6}\u{3bd}</p>"; "example_651")]
#[test_case("Multiple     spaces", "<p>Multiple     spaces</p>"; "example_652")]
fn textual_content(input: &str, output: &str) {
    run_spec_test(input, output);
}

#[test_case("***\n---\n___", "<hr />\n<hr />\n<hr />"; "example_43")]
#[test_case("+++", "<p>+++</p>"; "example_44")]
#[test_case("===", "<p>===</p>"; "example_45")]
#[test_case("--\n**\n__", "<p>--\n**\n__</p>"; "example_46")]
#[test_case(" ***\n  ***\n   ***", "<hr />\n<hr />\n<hr />"; "example_47")]
#[test_case("    ***", "<pre><code>***\n</code></pre>"; "example_48")]
#[test_case("Foo\n    ***", "<p>Foo\n***</p>"; "example_49")]
#[test_case("_____________________________________", "<hr />"; "example_50")]
#[test_case(" - - -", "<hr />"; "example_51")]
#[test_case(" **  * ** * ** * **", "<hr />"; "example_52")]
#[test_case("-     -      -      -", "<hr />"; "example_53")]
#[test_case("- - - -    ", "<hr />"; "example_54")]
#[test_case("_ _ _ _ a\n\na------\n\n---a---", "<p>_ _ _ _ a</p>\n<p>a------</p>\n<p>---a---</p>"; "example_55")]
#[test_case(" *-*", "<p><em>-</em></p>"; "example_56")]
// #[test_case("- foo\n***\n- bar", "<ul>\n<li>foo</li>\n</ul>\n<hr />\n<ul>\n<li>bar</li>\n</ul>"; "example_57")]
#[test_case("Foo\n***\nbar", "<p>Foo</p>\n<hr />\n<p>bar</p>"; "example_58")]
#[test_case("Foo\n---\nbar", "<h2>Foo</h2>\n<p>bar</p>"; "example_59")]
// #[test_case("* Foo\n* * *\n* Bar", "<ul>\n<li>Foo</li>\n</ul>\n<hr />\n<ul>\n<li>Bar</li>\n</ul>"; "example_60")]
// #[test_case("- Foo\n- * * *", "<ul>\n<li>Foo</li>\n<li>\n<hr />\n</li>\n</ul>"; "example_61")]
fn thematic_breaks(input: &str, output: &str) {
    run_spec_test(input, output);
}

