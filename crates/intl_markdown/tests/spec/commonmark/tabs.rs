#![doc = r" This module is autogenerated with `cargo xtask gen-spec-tests`. The"]
#![doc = r" source for this script lives at `xtask/src/bin/gen-spec-tests.rs`."]
use super::harness;
#[test]
fn example_1() {
    let input = "\tfoo\tbaz\t\tbim";
    let expected = "<pre><code>foo\tbaz\t\tbim\n</code></pre>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_2() {
    let input = "  \tfoo\tbaz\t\tbim";
    let expected = "<pre><code>foo\tbaz\t\tbim\n</code></pre>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_3() {
    let input = "    a\ta\n    ὐ\ta";
    let expected = "<pre><code>a\ta\nὐ\ta\n</code></pre>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_4() {
    let input = "  - foo\n\n\tbar";
    let expected = "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_5() {
    let input = "- foo\n\n\t\tbar";
    let expected = "<ul>\n<li>\n<p>foo</p>\n<pre><code>  bar\n</code></pre>\n</li>\n</ul>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_6() {
    let input = ">\t\tfoo";
    let expected = "<blockquote>\n<pre><code>  foo\n</code></pre>\n</blockquote>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_7() {
    let input = "-\t\tfoo";
    let expected = "<ul>\n<li>\n<pre><code>  foo\n</code></pre>\n</li>\n</ul>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_8() {
    let input = "    foo\n\tbar";
    let expected = "<pre><code>foo\nbar\n</code></pre>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_9() {
    let input = " - foo\n   - bar\n\t - baz";
    let expected =
        "<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>baz</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_10() {
    let input = "#\tFoo";
    let expected = "<h1>Foo</h1>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_11() {
    let input = "*\t*\t*\t";
    let expected = "<hr />";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
