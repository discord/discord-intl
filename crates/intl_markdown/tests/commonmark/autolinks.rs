#![doc = r" This module is autogenerated with `cargo xtask gen-spec-tests`. The"]
#![doc = r" source for this script lives at `xtask/src/bin/gen-spec-tests.rs`."]
mod harness {
    use intl_markdown::{commonmark_html, ICUMarkdownParser, SourceText};
    pub fn parse(input: &str) -> String {
        let mut parser = ICUMarkdownParser::new(SourceText::from(input), true);
        parser.parse();
        let ast = parser.finish().to_document();
        let mut buffer = String::new();
        commonmark_html::format_document(&mut buffer, &ast)
            .expect("Failed to format the parsed input");
        buffer
    }
}
#[test]
fn example_594() {
    let input = "<http://foo.bar.baz>";
    let expected = "<p><a href=\\\"http://foo.bar.baz\\\">http://foo.bar.baz</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_595() {
    let input = "<https://foo.bar.baz/test?q=hello&id=22&boolean>";
    let expected = "<p><a href=\\\"https://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean\\\">https://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean</a></p>" ;
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_596() {
    let input = "<irc://foo.bar:2233/baz>";
    let expected = "<p><a href=\\\"irc://foo.bar:2233/baz\\\">irc://foo.bar:2233/baz</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_597() {
    let input = "<MAILTO:FOO@BAR.BAZ>";
    let expected = "<p><a href=\\\"MAILTO:FOO@BAR.BAZ\\\">MAILTO:FOO@BAR.BAZ</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[ignore]
#[test]
fn example_598() {
    let input = "<a+b+c:d>";
    let expected = "<p><a href=\\\"a+b+c:d\\\">a+b+c:d</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_599() {
    let input = "<made-up-scheme://foo,bar>";
    let expected = "<p><a href=\\\"made-up-scheme://foo,bar\\\">made-up-scheme://foo,bar</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_600() {
    let input = "<https://../>";
    let expected = "<p><a href=\\\"https://../\\\">https://../</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_601() {
    let input = "<localhost:5001/foo>";
    let expected = "<p><a href=\\\"localhost:5001/foo\\\">localhost:5001/foo</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_602() {
    let input = "<https://foo.bar/baz bim>";
    let expected = "<p>&lt;https://foo.bar/baz bim&gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_603() {
    let input = "<https://example.com/\\\\[\\\\>";
    let expected =
        "<p><a href=\\\"https://example.com/%5C%5B%5C\\\">https://example.com/\\\\[\\\\</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_604() {
    let input = "<foo@bar.example.com>";
    let expected = "<p><a href=\\\"mailto:foo@bar.example.com\\\">foo@bar.example.com</a></p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_605() {
    let input = "<foo+special@Bar.baz-bar0.com>";
    let expected = "<p><a href=\\\"mailto:foo+special@Bar.baz-bar0.com\\\">foo+special@Bar.baz-bar0.com</a></p>" ;
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_606() {
    let input = "<foo\\\\+@bar.example.com>";
    let expected = "<p>&lt;foo+@bar.example.com&gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_607() {
    let input = "<>";
    let expected = "<p>&lt;&gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_608() {
    let input = "< https://foo.bar >";
    let expected = "<p>&lt; https://foo.bar &gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_609() {
    let input = "<m:abc>";
    let expected = "<p>&lt;m:abc&gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_610() {
    let input = "<foo.bar.baz>";
    let expected = "<p>&lt;foo.bar.baz&gt;</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_611() {
    let input = "https://example.com";
    let expected = "<p>https://example.com</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_612() {
    let input = "foo@bar.example.com";
    let expected = "<p>foo@bar.example.com</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
