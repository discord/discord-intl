#![doc = r" This module is autogenerated with `cargo xtask gen-spec-tests`. The"]
#![doc = r" source for this script lives at `xtask/src/bin/gen-spec-tests.rs`."]
mod harness {
    use intl_markdown::{commonmark_html, ICUMarkdownParser, SourceText};
    pub fn parse(input: &str) -> String {
        let mut parser = ICUMarkdownParser::new(SourceText::from(input), true);
        parser.parse();
        let ast = parser.finish().to_document();
        let mut buffer = String::new();
        commonmark_html::format_document(&mut buffer, &ast)
            .expect("Failed to format the parsed input");
        buffer
    }
}
#[test]
fn example_650() {
    let input = "hello $.;\\'there";
    let expected = "<p>hello $.;\\'there</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_651() {
    let input = "Foo \\u{3c7}\\u{3c1}\\u{1fc6}\\u{3bd}";
    let expected = "<p>Foo \\u{3c7}\\u{3c1}\\u{1fc6}\\u{3bd}</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
#[test]
fn example_652() {
    let input = "Multiple     spaces";
    let expected = "<p>Multiple     spaces</p>";
    let parsed = harness::parse(input);
    assert_eq!(expected, parsed);
}
