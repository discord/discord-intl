use unicode_properties::{GeneralCategoryGroup, UnicodeGeneralCategory};

pub(crate) fn is_cjk_codepoint(codepoint: char, value_when_ambiguous: bool) -> bool {
    if (codepoint as u32) < 0x1100 {
        return false;
    };

    if is_ambiguous_width(codepoint) {
        return value_when_ambiguous;
    }

    matches!(
        codepoint as u32,
        0x1100..=0x11ff
          | 0x20a9
          | 0x2329..=0x232a
          | 0x2630..=0x2637
          | 0x268a..=0x268f
          | 0x2e80..=0x2e99
          | 0x2e9b..=0x2ef3
          | 0x2f00..=0x2fd5
          | 0x2ff0..=0x303e
          | 0x3041..=0x3096
          | 0x3099..=0x30ff
          | 0x3105..=0x312f
          | 0x3131..=0x318e
          | 0x3190..=0x31e5
          | 0x31ef..=0x321e
          | 0x3220..=0x3247
          | 0x3250..=0xa48c
          | 0xa490..=0xa4c6
          | 0xa960..=0xa97c
          | 0xac00..=0xd7a3
          | 0xd7b0..=0xd7c6
          | 0xd7cb..=0xd7fb
          | 0xf900..=0xfaff
          | 0xfe10..=0xfe19
          | 0xfe30..=0xfe52
          | 0xfe54..=0xfe66
          | 0xfe68..=0xfe6b
          | 0xff01..=0xffbe
          | 0xffc2..=0xffc7
          | 0xffca..=0xffcf
          | 0xffd2..=0xffd7
          | 0xffda..=0xffdc
          | 0xffe0..=0xffe6
          | 0xffe8..=0xffee
          | 0x16fe0..=0x16fe4
          | 0x16ff0..=0x16ff1
          | 0x17000..=0x187f7
          | 0x18800..=0x18cd5
          | 0x18cff..=0x18d08
          | 0x1aff0..=0x1aff3
          | 0x1aff5..=0x1affb
          | 0x1affd..=0x1affe
          | 0x1b000..=0x1b122
          | 0x1b132
          | 0x1b150..=0x1b152
          | 0x1b155
          | 0x1b164..=0x1b167
          | 0x1b170..=0x1b2fb
          | 0x1d300..=0x1d356
          | 0x1d360..=0x1d376
          | 0x1f200
          | 0x1f202
          | 0x1f210..=0x1f219
          | 0x1f21b..=0x1f22e
          | 0x1f230..=0x1f231
          | 0x1f237
          | 0x1f23b
          | 0x1f240..=0x1f248
          | 0x1f260..=0x1f265
          | 0x20000..=0x3fffd
    )
}

pub(crate) fn is_cjk_quotemark(codepoint: char) -> bool {
    matches!(codepoint as u32, 0x2018 | 0x2019 | 0x201c | 0x201d)
}

pub(crate) fn is_ivs_codepoint(codepoint: char) -> bool {
    matches!(codepoint as u32, 0xe0100..=0xe01ef)
}

pub(crate) fn is_punctuation(codepoint: char) -> bool {
    codepoint.is_ascii_punctuation()
        || matches!(
            codepoint.general_category_group(),
            // "Unicode symbols count as punctuation, too"
            GeneralCategoryGroup::Punctuation | GeneralCategoryGroup::Symbol,
        )
}

pub(crate) fn is_non_emoji_general_use_variation_selector(codepoint: char) -> bool {
    matches!(codepoint as u32, 0xfe00..=0xfe0e)
}

pub(crate) fn is_ambiguous_width(codepoint: char) -> bool {
    matches!(
        codepoint as u32,
        0xA1
          | 0xA4 | 0xA7 | 0xA8 |0xAA|0xAD| 0xAE
          | 0xB0..=0xB4
          | 0xB6..=0xBA
          | 0xBC..=0xBF
          | 0xC6
          | 0xD0
          | 0xD7
          | 0xD8
          | 0xDE..=0xE1
          | 0xE6
          | 0xE8..=0xEA
          | 0xEC
          | 0xED
          | 0xF0
          | 0xF2
          | 0xF3
          | 0xF7..=0xFA
          | 0xFC
          | 0xFE
          | 0x101
          | 0x111
          | 0x113
          | 0x11B
          | 0x126
          | 0x127
          | 0x12B
          | 0x131..=0x133
          | 0x138
          | 0x13F..=0x142
          | 0x144
          | 0x148..=0x14B
          | 0x14D
          | 0x152
          | 0x153
          | 0x166
          | 0x167
          | 0x16B
          | 0x1CE
          | 0x1D0
          | 0x1D2
          | 0x1D4
          | 0x1D6
          | 0x1D8
          | 0x1DA
          | 0x1DC
          | 0x251
          | 0x261
          | 0x2C4
          | 0x2C7
          | 0x2C9..=0x2CB
          | 0x2CD
          | 0x2D0
          | 0x2D8..=0x2DB
          | 0x2DD
          | 0x2DF
          | 0x300..=0x36F
          | 0x391..=0x3A1
          | 0x3A3..=0x3A9
          | 0x3B1..=0x3C1
          | 0x3C3..=0x3C9
          | 0x401
          | 0x410..=0x44F
          | 0x451
          | 0x2010
          | 0x2013..=0x2016
          | 0x2018
          | 0x2019
          | 0x201C
          | 0x201D
          | 0x2020..=0x2022
          | 0x2024..=0x2027
          | 0x2030
          | 0x2032
          | 0x2033
          | 0x2035
          | 0x203B
          | 0x203E
          | 0x2074
          | 0x207F
          | 0x2081..=0x2084
          | 0x20AC
          | 0x2103
          | 0x2105
          | 0x2109
          | 0x2113
          | 0x2116
          | 0x2121
          | 0x2122
          | 0x2126
          | 0x212B
          | 0x2153
          | 0x2154
          | 0x215B..=0x215E
          | 0x2160..=0x216B
          | 0x2170..=0x2179
          | 0x2189
          | 0x2190..=0x2199
          | 0x21B8
          | 0x21B9
          | 0x21D2
          | 0x21D4
          | 0x21E7
          | 0x2200
          | 0x2202
          | 0x2203
          | 0x2207
          | 0x2208
          | 0x220B
          | 0x220F
          | 0x2211
          | 0x2215
          | 0x221A
          | 0x221D..=0x2220
          | 0x2223
          | 0x2225
          | 0x2227..=0x222C
          | 0x222E
          | 0x2234..=0x2237
          | 0x223C
          | 0x223D
          | 0x2248
          | 0x224C
          | 0x2252
          | 0x2260
          | 0x2261
          | 0x2264..=0x2267
          | 0x226A
          | 0x226B
          | 0x226E
          | 0x226F
          | 0x2282
          | 0x2283
          | 0x2286
          | 0x2287
          | 0x2295
          | 0x2299
          | 0x22A5
          | 0x22BF
          | 0x2312
          | 0x2460..=0x24E9
          | 0x24EB..=0x254B
          | 0x2550..=0x2573
          | 0x2580..=0x258F
          | 0x2592..=0x2595
          | 0x25A0
          | 0x25A1
          | 0x25A3..=0x25A9
          | 0x25B2
          | 0x25B3
          | 0x25B6
          | 0x25B7
          | 0x25BC
          | 0x25BD
          | 0x25C0
          | 0x25C1
          | 0x25C6..=0x25C8
          | 0x25CB
          | 0x25CE..=0x25D1
          | 0x25E2..=0x25E5
          | 0x25EF
          | 0x2605
          | 0x2606
          | 0x2609
          | 0x260E
          | 0x260F
          | 0x261C
          | 0x261E
          | 0x2640
          | 0x2642
          | 0x2660
          | 0x2661
          | 0x2663..=0x2665
          | 0x2667..=0x266A
          | 0x266C
          | 0x266D
          | 0x266F
          | 0x269E
          | 0x269F
          | 0x26BF
          | 0x26C6..=0x26CD
          | 0x26CF..=0x26D3
          | 0x26D5..=0x26E1
          | 0x26E3
          | 0x26E8
          | 0x26E9
          | 0x26EB..=0x26F1
          | 0x26F4
          | 0x26F6..=0x26F9
          | 0x26FB
          | 0x26FC
          | 0x26FE
          | 0x26FF
          | 0x273D
          | 0x2776..=0x277F
          | 0x2B56..=0x2B59
          | 0x3248..=0x324F
          | 0xE000..=0xF8FF
          | 0xFE00..=0xFE0F
          | 0xFFFD
          | 0x1F100..=0x1F10A
          | 0x1F110..=0x1F12D
          | 0x1F130..=0x1F169
          | 0x1F170..=0x1F18D
          | 0x1F18F
          | 0x1F190
          | 0x1F19B..=0x1F1AC
          | 0xE0100..=0xE01EF
          | 0xF0000..=0xFFFFD
          | 0x100000..=0x10FFFD
    )
}
